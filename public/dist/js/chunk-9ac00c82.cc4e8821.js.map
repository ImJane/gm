{"version":3,"sources":["webpack:///./node_modules/_codemirror@5.40.2@codemirror/addon/display/fullscreen.js","webpack:///./node_modules/_codemirror@5.40.2@codemirror/addon/mode/overlay.js","webpack:///./node_modules/_simplemde@1.11.2@simplemde/src/js/codemirror/tablist.js","webpack:///./node_modules/_codemirror@5.40.2@codemirror/mode/gfm/gfm.js","webpack:///./node_modules/_codemirror-spell-checker@1.1.2@codemirror-spell-checker/src/js/spell-checker.js","webpack:///./node_modules/_simplemde@1.11.2@simplemde/src/js/simplemde.js","webpack:///./node_modules/_codemirror@5.40.2@codemirror/addon/display/placeholder.js","webpack:///./node_modules/_codemirror@5.40.2@codemirror/mode/xml/xml.js","webpack:///./node_modules/_codemirror@5.40.2@codemirror/addon/selection/mark-selection.js","webpack:///./src/view/components/markdown/markdown.vue?29b6","webpack:///./src/components/markdown/markdown.vue?5a6c","webpack:///src/components/markdown/markdown.vue","webpack:///./src/components/markdown/markdown.vue?0a50","webpack:///./src/components/markdown/markdown.vue","webpack:///./src/components/markdown/index.js","webpack:///src/view/components/markdown/markdown.vue","webpack:///./src/view/components/markdown/markdown.vue?9e6a","webpack:///./src/view/components/markdown/markdown.vue","webpack:///./src/view/components/markdown/markdown.vue?530d","webpack:///./src/components/markdown/markdown.vue?94b6","webpack:///./node_modules/_typo-js@1.0.3@typo-js/typo.js","webpack:///./node_modules/_codemirror@5.40.2@codemirror/addon/edit/continuelist.js","webpack:///./node_modules/_marked@0.5.1@marked/lib/marked.js","webpack:///./node_modules/_codemirror@5.40.2@codemirror/mode/meta.js","webpack:///./node_modules/_codemirror@5.40.2@codemirror/mode/markdown/markdown.js"],"names":["mod","__webpack_require__","CodeMirror","setFullscreen","cm","wrap","getWrapperElement","state","fullScreenRestore","scrollTop","window","pageYOffset","scrollLeft","pageXOffset","width","style","height","className","document","documentElement","overflow","refresh","setNormal","replace","info","scrollTo","defineOption","val","old","Init","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","commands","tabAndIndentMarkdownList","ranges","listSelections","head","eolState","getStateAfter","line","inList","list","execCommand","options","indentWithTabs","spaces","Array","tabSize","join","replaceSelection","shiftTabAndUnindentMarkdownList","urlRE","defineMode","config","modeConfig","codeDepth","code","gfmOverlay","codeBlock","ateSpace","s","match","skipToEnd","sol","peek","next","before","eatWhile","difference","eatSpace","gitHubSpice","string","slice","test","charAt","markdownConfig","taskLists","strikethrough","emoji","attr","name","getMode","defineMIME","Typo","CodeMirrorSpellChecker","codeMirrorInstance","String","prototype","includes","indexOf","apply","this","arguments","aff_loading","xhr_aff","XMLHttpRequest","open","onload","readyState","status","aff_data","responseText","num_loaded","typo","dic_data","platform","send","dic_loading","xhr_dic","rx_word","ch","word","check","backdrop","console","log","module","exports","marked","isMac","navigator","bindings","toggleBold","toggleItalic","drawLink","toggleHeadingSmaller","toggleHeadingBigger","drawImage","toggleBlockquote","toggleOrderedList","toggleUnorderedList","toggleCodeBlock","togglePreview","toggleStrikethrough","toggleHeading1","toggleHeading2","toggleHeading3","cleanBlock","drawTable","drawHorizontalRule","undo","redo","toggleSideBySide","toggleFullScreen","shortcuts","getBindingName","f","key","isMobile","a","substr","userAgent","vendor","opera","fixShortcut","createIcon","enableTooltips","el","createElement","undefined","title","createTootlip","action","tabIndex","createSep","innerHTML","actionName","tooltip","getState","getCursor","stat","getTokenAt","type","data","text","types","split","ret","i","length","bold","getLine","quote","italic","link","image","saved_overflow","editor","codemirror","setOption","getOption","body","previousSibling","toolbarButton","toolbarElements","fullscreen","sidebyside","nextSibling","_toggleBlock","blockStyles","fenceCharsToInsert","fencing_line","styles","token_state","code_type","line_num","firstTok","lastTok","getLineHandle","indentedCode","fencedChars","insertFencingAtSelection","cur_start","cur_end","start_line_sel","end_line_sel","sel_multi","repl_start","repl_end","_replaceSelection","setSelection","block_start","block_end","lineCount","tok","is_code","end","replaceRange","focus","start_text","start_line","end_text","end_line","fencedTok","fence_chars","operation","search_from","next_line","next_line_last_tok","next_line_indented","indentLine","no_sel_and_starting_of_line","_toggleLine","_toggleHeading","_cleanBlock","url","promptURLs","prompt","promptTexts","insertTexts","table","horizontalRule","wrapper","preview","useSideBySideListener","setTimeout","previewNormal","lastChild","toolbar","toolbar_div","sideBySideRenderingFunction","previewRender","value","on","off","appendChild","active","startEnd","startPoint","endPoint","getSelection","direction","size","currHeadingLevel","search","repl","unordered-list","ordered-list","map","start_chars","end_chars","_mergeProperties","target","source","property","hasOwnProperty","concat","constructor","Object","extend","wordCount","pattern","m","count","charCodeAt","toolbarBuiltInButtons","default","heading","heading-smaller","heading-bigger","heading-1","heading-2","heading-3","separator-1","clean-block","separator-2","horizontal-rule","separator-3","side-by-side","separator-4","guide","separator-5","SimpleMDE","parent","autoDownloadFA","autoDownloadFontAwesome","styleSheets","href","rel","getElementsByTagName","element","push","showIcons","plainText","markdown","parsingConfig","highlightFormatting","autosave","unique_id","uniqueId","render","initialValue","foundSavedValue","isLocalStorageAvailable","localStorage","setItem","removeItem","e","markedOptions","renderingConfig","singleLineBreaks","breaks","codeSyntaxHighlighting","hljs","highlight","highlightAuto","setOptions","_rendered","self","keyMaps","addEventListener","event","keyCode","spellChecker","fromTextArea","theme","indentUnit","lineNumbers","autofocus","extraKeys","lineWrapping","allowDropFileTypes","placeholder","getAttribute","styleSelectedText","forceSync","save","gui","createToolbar","statusbar","createStatusbar","enabled","sideBySide","createSideBySide","temp_cm","bind","simplemde","form","loaded","getItem","setValue","getElementById","d","Date","hh","getHours","getMinutes","dd","h","autosaveTimeoutId","delay","clearAutosavedValue","parentNode","insertBefore","cScroll","pScroll","v","getScrollInfo","clientHeight","ratio","parseFloat","top","move","scrollHeight","onscroll","items","bar","toolbarData","toolbarGuideIcon","hideIcons","nonSeparatorIconsFollow","x","item","toolbarTips","onclick","preventDefault","cmWrapper","onUpdate","defaultValue","getValue","setAttribute","getDoc","isPreviewActive","isSideBySideActive","isFullscreenActive","toTextArea","removeChild","clearTimeout","clearPlaceholder","setPlaceholder","elt","cssText","placeHolder","createTextNode","display","lineSpace","firstChild","onBlur","isEmpty","onChange","empty","prev","hasFocus","htmlConfig","autoSelfClosers","area","br","col","command","embed","frame","hr","img","input","keygen","meta","param","track","wbr","menuitem","implicitlyClosed","li","optgroup","option","p","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","blockquote","dir","div","dl","fieldset","footer","h1","h2","h3","h4","h5","h6","header","hgroup","menu","nav","ol","pre","section","ul","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","defaults","htmlMode","prop","inText","chain","parser","tokenize","ok","eat","inBlock","doctype","inTag","baseState","tagName","tagStart","inAttribute","stringStartCol","column","closure","eol","isInAttribute","terminator","depth","Context","startOfLine","context","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","mimeModes","onCursorActivity","markedSelection","update","clear","markedSelectionStyle","reset","CHUNK_SIZE","Pos","cmp","cmpPos","coverRange","from","to","addAt","array","cls","endLine","atEnd","mark","markText","splice","somethingSelected","coverStart","find","coverEnd","shift","pop","_vm","_h","$createElement","_c","_self","model","callback","$$v","content","expression","staticRenderFns","markdownvue_type_template_id_cd159302_render","staticClass","ref","markdownvue_type_template_id_cd159302_staticRenderFns","markdownvue_type_script_lang_js_","naem","props","localCache","Boolean","methods","addEvents","_this","markdownContent","$emit","mounted","simplemde_default","assign","$refs","markdown_markdownvue_type_script_lang_js_","component","componentNormalizer","__file","MarkdownEditor","components_markdown_markdownvue_type_script_lang_js_","components","components_markdown","view_components_markdown_markdownvue_type_script_lang_js_","markdown_component","__webpack_exports__","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_0_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_1_2_2_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_markdown_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_0_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_1_2_2_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_markdown_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_1_0_0_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_4_1_0_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_1_2_2_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_markdown_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_1_0_0_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_4_1_0_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_1_2_2_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_markdown_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default","__dirname","Buffer","dictionary","affData","wordsData","settings","rules","dictionaryTable","compoundRules","compoundRuleCodes","replacementTable","flags","memoized","path","j","_len","_jlen","readDataFile","setFunc","response","_readFile","asyncLoad","then","setAffData","setup","setWordsData","_parseAFF","rule","ONLYINCOMPOUND","_parseDIC","ruleText","expressionText","character","RegExp","loadedCallback","chrome","extension","dictionaryPath","getURL","load","obj","charset","async","promise","req","Promise","resolve","reject","statusText","onerror","overrideMimeType","fs","existsSync","stats","statSync","fileDescriptor","openSync","buffer","readSync","toString","subline","numEntries","lineParts","_removeAffixComments","lines","definitionParts","ruleType","ruleCode","combineable","parseInt","entries","charactersToRemove","additionParts","charactersToAdd","continuationClasses","parseRuleCodes","regexToMatch","entry","add","remove","_removeDicComments","addWord","parts","ruleCodesArray","NEEDAFFIX","newWords","_applyRule","ii","_iilen","newWord","k","combineCode","combineRule","otherNewWords","iii","_iiilen","otherNewWord","trim","textCodes","FLAG","continuationRule","aWord","trimmedWord","checkExact","toUpperCase","capitalizedWord","substring","toLowerCase","hasFlag","lowercaseWord","ruleCodes","COMPOUNDMIN","flag","wordFlags","alphabet","suggest","limit","memoizedLimit","replacementEntry","correctedWord","edits1","words","rv","known","correct","ed1","ed2","corrections","weighted_corrections","sorted_corrections","sorter","b","sort","reverse","capitalization_scheme","suggestions","listRE","emptyListRE","unorderedListRE","incrementRemainingMarkdownListNumbers","startLine","lookAhead","skipCount","startItem","startIndent","nextLineNumber","nextLine","nextItem","nextIndent","newNumber","nextNumber","itemNumber","isNaN","newlineAndIndentContinueMarkdownList","replacements","inQuote","cursorBeforeBullet","after","numbered","bullet","replaceSelections","global","root","block","newline","fences","noop","nptable","html","def","lheading","paragraph","Lexer","tokens","links","create","normal","pedantic","gfm","tables","_label","_title","edit","getRegex","_tag","_comment","merge","lex","src","lexer","loose","cap","bull","listStart","listItems","t","space","tag","l","isordered","istask","ischecked","rtrim","lang","splitCells","align","cells","ordered","smartLists","task","checked","sanitize","sanitizer","Error","inline","escape","autolink","reflink","nolink","strong","em","del","InlineLexer","renderer","Renderer","TextRenderer","Parser","encode","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","fromCharCode","regex","opt","resolveUrl","baseUrls","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","mangle","inLink","inRawBlock","outputLink","escapes","codespan","smartypants","random","escaped","langPrefix","level","raw","headerIds","headerPrefix","xhtml","startatt","listitem","checkbox","tablerow","tablecell","prot","decodeURIComponent","baseUrl","originIndependentUrl","encodeURI","parse","inlineText","parseText","row","cell","&","<",">","\"","'","call","tableRow","offset","str","curr","c","invert","suffLen","currChar","pending","done","err","message","silent","getDefaults","inlineLexer","modeInfo","mime","ext","mimes","file","alias","findModeByMIME","findModeByExtension","findModeByFileName","filename","dot","lastIndexOf","findModeByName","cmCfg","modeCfg","htmlModeMissing","found","maxBlockquoteDepth","fencedCodeBlockHighlighting","xml","tokenTypeOverrides","tokenTypes","list1","list2","list3","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","tokenType","hrRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","expandedTab","switchInline","switchBlock","lineIsEmpty","linkTitle","htmlBlock","exit","inner","htmlState","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","firstTokenOnLine","prevLineLineIsEmpty","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","maxNonCodeIndentation","listStack","lineIndentation","indentationDiff","allowsInlineContinuation","fencedCodeEnd","isHr","getType","setext","listType","taskList","fencedEndRE","localMode","localState","local","footnoteLink","md_inside","returnType","currListInd","hasExitedList","maxFencedEndInd","taskOpen","taskClosed","listMod","handleText","matchCh","previousFormatting","formattingEscape","atts","backUp","len","leftFlanking","rightFlanking","setEm","setStrong","retType","getLinkHrefInside","linkRE",")","]","endChar","returnState","footnoteLinkInside","footnoteUrl","closeBrackets","fold"],"mappings":"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","file":"js/chunk-9ac00c82.cc4e8821.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"fullScreen\", false, function(cm, val, old) {\n    if (old == CodeMirror.Init) old = false;\n    if (!old == !val) return;\n    if (val) setFullscreen(cm);\n    else setNormal(cm);\n  });\n\n  function setFullscreen(cm) {\n    var wrap = cm.getWrapperElement();\n    cm.state.fullScreenRestore = {scrollTop: window.pageYOffset, scrollLeft: window.pageXOffset,\n                                  width: wrap.style.width, height: wrap.style.height};\n    wrap.style.width = \"\";\n    wrap.style.height = \"auto\";\n    wrap.className += \" CodeMirror-fullscreen\";\n    document.documentElement.style.overflow = \"hidden\";\n    cm.refresh();\n  }\n\n  function setNormal(cm) {\n    var wrap = cm.getWrapperElement();\n    wrap.className = wrap.className.replace(/\\s*CodeMirror-fullscreen\\b/, \"\");\n    document.documentElement.style.overflow = \"\";\n    var info = cm.state.fullScreenRestore;\n    wrap.style.width = info.width; wrap.style.height = info.height;\n    window.scrollTo(info.scrollLeft, info.scrollTop);\n    cm.refresh();\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter) {\n      return base.indent(state.base, textAfter);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\nvar CodeMirror = require(\"codemirror\");\n\nCodeMirror.commands.tabAndIndentMarkdownList = function (cm) {\n\tvar ranges = cm.listSelections();\n\tvar pos = ranges[0].head;\n\tvar eolState = cm.getStateAfter(pos.line);\n\tvar inList = eolState.list !== false;\n\n\tif (inList) {\n\t\tcm.execCommand(\"indentMore\");\n\t\treturn;\n\t}\n\n\tif (cm.options.indentWithTabs) {\n\t\tcm.execCommand(\"insertTab\");\n\t}\n\telse {\n\t\tvar spaces = Array(cm.options.tabSize + 1).join(\" \");\n\t\tcm.replaceSelection(spaces);\n\t}\n};\n\nCodeMirror.commands.shiftTabAndUnindentMarkdownList = function (cm) {\n\tvar ranges = cm.listSelections();\n\tvar pos = ranges[0].head;\n\tvar eolState = cm.getStateAfter(pos.line);\n\tvar inList = eolState.list !== false;\n\n\tif (inList) {\n\t\tcm.execCommand(\"indentLess\");\n\t\treturn;\n\t}\n\n\tif (cm.options.indentWithTabs) {\n\t\tcm.execCommand(\"insertTab\");\n\t}\n\telse {\n\t\tvar spaces = Array(cm.options.tabSize + 1).join(\" \");\n\t\tcm.replaceSelection(spaces);\n\t}\n};\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../markdown/markdown\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../markdown/markdown\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?«»“”‘’]))/i\n\nCodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n  var codeDepth = 0;\n  function blankLine(state) {\n    state.code = false;\n    return null;\n  }\n  var gfmOverlay = {\n    startState: function() {\n      return {\n        code: false,\n        codeBlock: false,\n        ateSpace: false\n      };\n    },\n    copyState: function(s) {\n      return {\n        code: s.code,\n        codeBlock: s.codeBlock,\n        ateSpace: s.ateSpace\n      };\n    },\n    token: function(stream, state) {\n      state.combineTokens = null;\n\n      // Hack to prevent formatting override inside code blocks (block and inline)\n      if (state.codeBlock) {\n        if (stream.match(/^```+/)) {\n          state.codeBlock = false;\n          return null;\n        }\n        stream.skipToEnd();\n        return null;\n      }\n      if (stream.sol()) {\n        state.code = false;\n      }\n      if (stream.sol() && stream.match(/^```+/)) {\n        stream.skipToEnd();\n        state.codeBlock = true;\n        return null;\n      }\n      // If this block is changed, it may need to be updated in Markdown mode\n      if (stream.peek() === '`') {\n        stream.next();\n        var before = stream.pos;\n        stream.eatWhile('`');\n        var difference = 1 + stream.pos - before;\n        if (!state.code) {\n          codeDepth = difference;\n          state.code = true;\n        } else {\n          if (difference === codeDepth) { // Must be exact\n            state.code = false;\n          }\n        }\n        return null;\n      } else if (state.code) {\n        stream.next();\n        return null;\n      }\n      // Check if space. If so, links can be formatted later on\n      if (stream.eatSpace()) {\n        state.ateSpace = true;\n        return null;\n      }\n      if (stream.sol() || state.ateSpace) {\n        state.ateSpace = false;\n        if (modeConfig.gitHubSpice !== false) {\n          if(stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/)) {\n            // User/Project@SHA\n            // User@SHA\n            // SHA\n            state.combineTokens = true;\n            return \"link\";\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n            // User/Project#Num\n            // User#Num\n            // #Num\n            state.combineTokens = true;\n            return \"link\";\n          }\n        }\n      }\n      if (stream.match(urlRE) &&\n          stream.string.slice(stream.start - 2, stream.start) != \"](\" &&\n          (stream.start == 0 || /\\W/.test(stream.string.charAt(stream.start - 1)))) {\n        // URLs\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\n        state.combineTokens = true;\n        return \"link\";\n      }\n      stream.next();\n      return null;\n    },\n    blankLine: blankLine\n  };\n\n  var markdownConfig = {\n    taskLists: true,\n    strikethrough: true,\n    emoji: true\n  };\n  for (var attr in modeConfig) {\n    markdownConfig[attr] = modeConfig[attr];\n  }\n  markdownConfig.name = \"markdown\";\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\n\n}, \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-gfm\", \"gfm\");\n});\n","// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\n\"use strict\";\n\n\n// Requires\nvar Typo = require(\"typo-js\");\n\n\n// Create function\nfunction CodeMirrorSpellChecker(options) {\n\t// Initialize\n\toptions = options || {};\n\n\n\t// Verify\n\tif(typeof options.codeMirrorInstance !== \"function\" || typeof options.codeMirrorInstance.defineMode !== \"function\") {\n\t\tconsole.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\");\n\t\treturn;\n\t}\n\n\n\t// Because some browsers don't support this functionality yet\n\tif(!String.prototype.includes) {\n\t\tString.prototype.includes = function() {\n\t\t\t\"use strict\";\n\t\t\treturn String.prototype.indexOf.apply(this, arguments) !== -1;\n\t\t};\n\t}\n\n\n\t// Define the new mode\n\toptions.codeMirrorInstance.defineMode(\"spell-checker\", function(config) {\n\t\t// Load AFF/DIC data\n\t\tif(!CodeMirrorSpellChecker.aff_loading) {\n\t\t\tCodeMirrorSpellChecker.aff_loading = true;\n\t\t\tvar xhr_aff = new XMLHttpRequest();\n\t\t\txhr_aff.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\", true);\n\t\t\txhr_aff.onload = function() {\n\t\t\t\tif(xhr_aff.readyState === 4 && xhr_aff.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_aff.send(null);\n\t\t}\n\n\t\tif(!CodeMirrorSpellChecker.dic_loading) {\n\t\t\tCodeMirrorSpellChecker.dic_loading = true;\n\t\t\tvar xhr_dic = new XMLHttpRequest();\n\t\t\txhr_dic.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\", true);\n\t\t\txhr_dic.onload = function() {\n\t\t\t\tif(xhr_dic.readyState === 4 && xhr_dic.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_dic.send(null);\n\t\t}\n\n\n\t\t// Define what separates a word\n\t\tvar rx_word = \"!\\\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ \";\n\n\n\t\t// Create the overlay and such\n\t\tvar overlay = {\n\t\t\ttoken: function(stream) {\n\t\t\t\tvar ch = stream.peek();\n\t\t\t\tvar word = \"\";\n\n\t\t\t\tif(rx_word.includes(ch)) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\twhile((ch = stream.peek()) != null && !rx_word.includes(ch)) {\n\t\t\t\t\tword += ch;\n\t\t\t\t\tstream.next();\n\t\t\t\t}\n\n\t\t\t\tif(CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word))\n\t\t\t\t\treturn \"spell-error\"; // CSS class: cm-spell-error\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tvar mode = options.codeMirrorInstance.getMode(\n\t\t\tconfig, config.backdrop || \"text/plain\"\n\t\t);\n\n\t\treturn options.codeMirrorInstance.overlayMode(mode, overlay, true);\n\t});\n}\n\n\n// Initialize data globally to reduce memory consumption\nCodeMirrorSpellChecker.num_loaded = 0;\nCodeMirrorSpellChecker.aff_loading = false;\nCodeMirrorSpellChecker.dic_loading = false;\nCodeMirrorSpellChecker.aff_data = \"\";\nCodeMirrorSpellChecker.dic_data = \"\";\nCodeMirrorSpellChecker.typo;\n\n\n// Export\nmodule.exports = CodeMirrorSpellChecker;","/*global require,module*/\n\"use strict\";\nvar CodeMirror = require(\"codemirror\");\nrequire(\"codemirror/addon/edit/continuelist.js\");\nrequire(\"./codemirror/tablist\");\nrequire(\"codemirror/addon/display/fullscreen.js\");\nrequire(\"codemirror/mode/markdown/markdown.js\");\nrequire(\"codemirror/addon/mode/overlay.js\");\nrequire(\"codemirror/addon/display/placeholder.js\");\nrequire(\"codemirror/addon/selection/mark-selection.js\");\nrequire(\"codemirror/mode/gfm/gfm.js\");\nrequire(\"codemirror/mode/xml/xml.js\");\nvar CodeMirrorSpellChecker = require(\"codemirror-spell-checker\");\nvar marked = require(\"marked\");\n\n\n// Some variables\nvar isMac = /Mac/.test(navigator.platform);\n\n// Mapping of actions that can be bound to keyboard shortcuts or toolbar buttons\nvar bindings = {\n\t\"toggleBold\": toggleBold,\n\t\"toggleItalic\": toggleItalic,\n\t\"drawLink\": drawLink,\n\t\"toggleHeadingSmaller\": toggleHeadingSmaller,\n\t\"toggleHeadingBigger\": toggleHeadingBigger,\n\t\"drawImage\": drawImage,\n\t\"toggleBlockquote\": toggleBlockquote,\n\t\"toggleOrderedList\": toggleOrderedList,\n\t\"toggleUnorderedList\": toggleUnorderedList,\n\t\"toggleCodeBlock\": toggleCodeBlock,\n\t\"togglePreview\": togglePreview,\n\t\"toggleStrikethrough\": toggleStrikethrough,\n\t\"toggleHeading1\": toggleHeading1,\n\t\"toggleHeading2\": toggleHeading2,\n\t\"toggleHeading3\": toggleHeading3,\n\t\"cleanBlock\": cleanBlock,\n\t\"drawTable\": drawTable,\n\t\"drawHorizontalRule\": drawHorizontalRule,\n\t\"undo\": undo,\n\t\"redo\": redo,\n\t\"toggleSideBySide\": toggleSideBySide,\n\t\"toggleFullScreen\": toggleFullScreen\n};\n\nvar shortcuts = {\n\t\"toggleBold\": \"Cmd-B\",\n\t\"toggleItalic\": \"Cmd-I\",\n\t\"drawLink\": \"Cmd-K\",\n\t\"toggleHeadingSmaller\": \"Cmd-H\",\n\t\"toggleHeadingBigger\": \"Shift-Cmd-H\",\n\t\"cleanBlock\": \"Cmd-E\",\n\t\"drawImage\": \"Cmd-Alt-I\",\n\t\"toggleBlockquote\": \"Cmd-'\",\n\t\"toggleOrderedList\": \"Cmd-Alt-L\",\n\t\"toggleUnorderedList\": \"Cmd-L\",\n\t\"toggleCodeBlock\": \"Cmd-Alt-C\",\n\t\"togglePreview\": \"Cmd-P\",\n\t\"toggleSideBySide\": \"F9\",\n\t\"toggleFullScreen\": \"F11\"\n};\n\nvar getBindingName = function(f) {\n\tfor(var key in bindings) {\n\t\tif(bindings[key] === f) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn null;\n};\n\nvar isMobile = function() {\n\tvar check = false;\n\t(function(a) {\n\t\tif(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n\t})(navigator.userAgent || navigator.vendor || window.opera);\n\treturn check;\n};\n\n\n/**\n * Fix shortcut. Mac use Command, others use Ctrl.\n */\nfunction fixShortcut(name) {\n\tif(isMac) {\n\t\tname = name.replace(\"Ctrl\", \"Cmd\");\n\t} else {\n\t\tname = name.replace(\"Cmd\", \"Ctrl\");\n\t}\n\treturn name;\n}\n\n\n/**\n * Create icon element for toolbar.\n */\nfunction createIcon(options, enableTooltips, shortcuts) {\n\toptions = options || {};\n\tvar el = document.createElement(\"a\");\n\tenableTooltips = (enableTooltips == undefined) ? true : enableTooltips;\n\n\tif(options.title && enableTooltips) {\n\t\tel.title = createTootlip(options.title, options.action, shortcuts);\n\n\t\tif(isMac) {\n\t\t\tel.title = el.title.replace(\"Ctrl\", \"⌘\");\n\t\t\tel.title = el.title.replace(\"Alt\", \"⌥\");\n\t\t}\n\t}\n\n\tel.tabIndex = -1;\n\tel.className = options.className;\n\treturn el;\n}\n\nfunction createSep() {\n\tvar el = document.createElement(\"i\");\n\tel.className = \"separator\";\n\tel.innerHTML = \"|\";\n\treturn el;\n}\n\nfunction createTootlip(title, action, shortcuts) {\n\tvar actionName;\n\tvar tooltip = title;\n\n\tif(action) {\n\t\tactionName = getBindingName(action);\n\t\tif(shortcuts[actionName]) {\n\t\t\ttooltip += \" (\" + fixShortcut(shortcuts[actionName]) + \")\";\n\t\t}\n\t}\n\n\treturn tooltip;\n}\n\n/**\n * The state of CodeMirror at the given position.\n */\nfunction getState(cm, pos) {\n\tpos = pos || cm.getCursor(\"start\");\n\tvar stat = cm.getTokenAt(pos);\n\tif(!stat.type) return {};\n\n\tvar types = stat.type.split(\" \");\n\n\tvar ret = {},\n\t\tdata, text;\n\tfor(var i = 0; i < types.length; i++) {\n\t\tdata = types[i];\n\t\tif(data === \"strong\") {\n\t\t\tret.bold = true;\n\t\t} else if(data === \"variable-2\") {\n\t\t\ttext = cm.getLine(pos.line);\n\t\t\tif(/^\\s*\\d+\\.\\s/.test(text)) {\n\t\t\t\tret[\"ordered-list\"] = true;\n\t\t\t} else {\n\t\t\t\tret[\"unordered-list\"] = true;\n\t\t\t}\n\t\t} else if(data === \"atom\") {\n\t\t\tret.quote = true;\n\t\t} else if(data === \"em\") {\n\t\t\tret.italic = true;\n\t\t} else if(data === \"quote\") {\n\t\t\tret.quote = true;\n\t\t} else if(data === \"strikethrough\") {\n\t\t\tret.strikethrough = true;\n\t\t} else if(data === \"comment\") {\n\t\t\tret.code = true;\n\t\t} else if(data === \"link\") {\n\t\t\tret.link = true;\n\t\t} else if(data === \"tag\") {\n\t\t\tret.image = true;\n\t\t} else if(data.match(/^header(\\-[1-6])?$/)) {\n\t\t\tret[data.replace(\"header\", \"heading\")] = true;\n\t\t}\n\t}\n\treturn ret;\n}\n\n\n// Saved overflow setting\nvar saved_overflow = \"\";\n\n/**\n * Toggle full screen of the editor.\n */\nfunction toggleFullScreen(editor) {\n\t// Set fullscreen\n\tvar cm = editor.codemirror;\n\tcm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n\n\n\t// Prevent scrolling on body during fullscreen active\n\tif(cm.getOption(\"fullScreen\")) {\n\t\tsaved_overflow = document.body.style.overflow;\n\t\tdocument.body.style.overflow = \"hidden\";\n\t} else {\n\t\tdocument.body.style.overflow = saved_overflow;\n\t}\n\n\n\t// Update toolbar class\n\tvar wrap = cm.getWrapperElement();\n\n\tif(!/fullscreen/.test(wrap.previousSibling.className)) {\n\t\twrap.previousSibling.className += \" fullscreen\";\n\t} else {\n\t\twrap.previousSibling.className = wrap.previousSibling.className.replace(/\\s*fullscreen\\b/, \"\");\n\t}\n\n\n\t// Update toolbar button\n\tvar toolbarButton = editor.toolbarElements.fullscreen;\n\n\tif(!/active/.test(toolbarButton.className)) {\n\t\ttoolbarButton.className += \" active\";\n\t} else {\n\t\ttoolbarButton.className = toolbarButton.className.replace(/\\s*active\\s*/g, \"\");\n\t}\n\n\n\t// Hide side by side if needed\n\tvar sidebyside = cm.getWrapperElement().nextSibling;\n\tif(/editor-preview-active-side/.test(sidebyside.className))\n\t\ttoggleSideBySide(editor);\n}\n\n\n/**\n * Action for toggling bold.\n */\nfunction toggleBold(editor) {\n\t_toggleBlock(editor, \"bold\", editor.options.blockStyles.bold);\n}\n\n\n/**\n * Action for toggling italic.\n */\nfunction toggleItalic(editor) {\n\t_toggleBlock(editor, \"italic\", editor.options.blockStyles.italic);\n}\n\n\n/**\n * Action for toggling strikethrough.\n */\nfunction toggleStrikethrough(editor) {\n\t_toggleBlock(editor, \"strikethrough\", \"~~\");\n}\n\n/**\n * Action for toggling code block.\n */\nfunction toggleCodeBlock(editor) {\n\tvar fenceCharsToInsert = editor.options.blockStyles.code;\n\n\tfunction fencing_line(line) {\n\t\t/* return true, if this is a ``` or ~~~ line */\n\t\tif(typeof line !== \"object\") {\n\t\t\tthrow \"fencing_line() takes a 'line' object (not a line number, or line text).  Got: \" + typeof line + \": \" + line;\n\t\t}\n\t\treturn line.styles && line.styles[2] && line.styles[2].indexOf(\"formatting-code-block\") !== -1;\n\t}\n\n\tfunction token_state(token) {\n\t\t// base goes an extra level deep when mode backdrops are used, e.g. spellchecker on\n\t\treturn token.state.base.base || token.state.base;\n\t}\n\n\tfunction code_type(cm, line_num, line, firstTok, lastTok) {\n\t\t/*\n\t\t * Return \"single\", \"indented\", \"fenced\" or false\n\t\t *\n\t\t * cm and line_num are required.  Others are optional for efficiency\n\t\t *   To check in the middle of a line, pass in firstTok yourself.\n\t\t */\n\t\tline = line || cm.getLineHandle(line_num);\n\t\tfirstTok = firstTok || cm.getTokenAt({\n\t\t\tline: line_num,\n\t\t\tch: 1\n\t\t});\n\t\tlastTok = lastTok || (!!line.text && cm.getTokenAt({\n\t\t\tline: line_num,\n\t\t\tch: line.text.length - 1\n\t\t}));\n\t\tvar types = firstTok.type ? firstTok.type.split(\" \") : [];\n\t\tif(lastTok && token_state(lastTok).indentedCode) {\n\t\t\t// have to check last char, since first chars of first line aren\"t marked as indented\n\t\t\treturn \"indented\";\n\t\t} else if(types.indexOf(\"comment\") === -1) {\n\t\t\t// has to be after \"indented\" check, since first chars of first indented line aren\"t marked as such\n\t\t\treturn false;\n\t\t} else if(token_state(firstTok).fencedChars || token_state(lastTok).fencedChars || fencing_line(line)) {\n\t\t\treturn \"fenced\";\n\t\t} else {\n\t\t\treturn \"single\";\n\t\t}\n\t}\n\n\tfunction insertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert) {\n\t\tvar start_line_sel = cur_start.line + 1,\n\t\t\tend_line_sel = cur_end.line + 1,\n\t\t\tsel_multi = cur_start.line !== cur_end.line,\n\t\t\trepl_start = fenceCharsToInsert + \"\\n\",\n\t\t\trepl_end = \"\\n\" + fenceCharsToInsert;\n\t\tif(sel_multi) {\n\t\t\tend_line_sel++;\n\t\t}\n\t\t// handle last char including \\n or not\n\t\tif(sel_multi && cur_end.ch === 0) {\n\t\t\trepl_end = fenceCharsToInsert + \"\\n\";\n\t\t\tend_line_sel--;\n\t\t}\n\t\t_replaceSelection(cm, false, [repl_start, repl_end]);\n\t\tcm.setSelection({\n\t\t\tline: start_line_sel,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: end_line_sel,\n\t\t\tch: 0\n\t\t});\n\t}\n\n\tvar cm = editor.codemirror,\n\t\tcur_start = cm.getCursor(\"start\"),\n\t\tcur_end = cm.getCursor(\"end\"),\n\t\ttok = cm.getTokenAt({\n\t\t\tline: cur_start.line,\n\t\t\tch: cur_start.ch || 1\n\t\t}), // avoid ch 0 which is a cursor pos but not token\n\t\tline = cm.getLineHandle(cur_start.line),\n\t\tis_code = code_type(cm, cur_start.line, line, tok);\n\tvar block_start, block_end, lineCount;\n\n\tif(is_code === \"single\") {\n\t\t// similar to some SimpleMDE _toggleBlock logic\n\t\tvar start = line.text.slice(0, cur_start.ch).replace(\"`\", \"\"),\n\t\t\tend = line.text.slice(cur_start.ch).replace(\"`\", \"\");\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: cur_start.line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: cur_start.line,\n\t\t\tch: 99999999999999\n\t\t});\n\t\tcur_start.ch--;\n\t\tif(cur_start !== cur_end) {\n\t\t\tcur_end.ch--;\n\t\t}\n\t\tcm.setSelection(cur_start, cur_end);\n\t\tcm.focus();\n\t} else if(is_code === \"fenced\") {\n\t\tif(cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\n\t\t\t// use selection\n\n\t\t\t// find the fenced line so we know what type it is (tilde, backticks, number of them)\n\t\t\tfor(block_start = cur_start.line; block_start >= 0; block_start--) {\n\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar fencedTok = cm.getTokenAt({\n\t\t\t\tline: block_start,\n\t\t\t\tch: 1\n\t\t\t});\n\t\t\tvar fence_chars = token_state(fencedTok).fencedChars;\n\t\t\tvar start_text, start_line;\n\t\t\tvar end_text, end_line;\n\t\t\t// check for selection going up against fenced lines, in which case we don't want to add more fencing\n\t\t\tif(fencing_line(cm.getLineHandle(cur_start.line))) {\n\t\t\t\tstart_text = \"\";\n\t\t\t\tstart_line = cur_start.line;\n\t\t\t} else if(fencing_line(cm.getLineHandle(cur_start.line - 1))) {\n\t\t\t\tstart_text = \"\";\n\t\t\t\tstart_line = cur_start.line - 1;\n\t\t\t} else {\n\t\t\t\tstart_text = fence_chars + \"\\n\";\n\t\t\t\tstart_line = cur_start.line;\n\t\t\t}\n\t\t\tif(fencing_line(cm.getLineHandle(cur_end.line))) {\n\t\t\t\tend_text = \"\";\n\t\t\t\tend_line = cur_end.line;\n\t\t\t\tif(cur_end.ch === 0) {\n\t\t\t\t\tend_line += 1;\n\t\t\t\t}\n\t\t\t} else if(cur_end.ch !== 0 && fencing_line(cm.getLineHandle(cur_end.line + 1))) {\n\t\t\t\tend_text = \"\";\n\t\t\t\tend_line = cur_end.line + 1;\n\t\t\t} else {\n\t\t\t\tend_text = fence_chars + \"\\n\";\n\t\t\t\tend_line = cur_end.line + 1;\n\t\t\t}\n\t\t\tif(cur_end.ch === 0) {\n\t\t\t\t// full last line selected, putting cursor at beginning of next\n\t\t\t\tend_line -= 1;\n\t\t\t}\n\t\t\tcm.operation(function() {\n\t\t\t\t// end line first, so that line numbers don't change\n\t\t\t\tcm.replaceRange(end_text, {\n\t\t\t\t\tline: end_line,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: end_line + (end_text ? 0 : 1),\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t\tcm.replaceRange(start_text, {\n\t\t\t\t\tline: start_line,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: start_line + (start_text ? 0 : 1),\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t});\n\t\t\tcm.setSelection({\n\t\t\t\tline: start_line + (start_text ? 1 : 0),\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: end_line + (start_text ? 1 : -1),\n\t\t\t\tch: 0\n\t\t\t});\n\t\t\tcm.focus();\n\t\t} else {\n\t\t\t// no selection, search for ends of this fenced block\n\t\t\tvar search_from = cur_start.line;\n\t\t\tif(fencing_line(cm.getLineHandle(cur_start.line))) { // gets a little tricky if cursor is right on a fenced line\n\t\t\t\tif(code_type(cm, cur_start.line + 1) === \"fenced\") {\n\t\t\t\t\tblock_start = cur_start.line;\n\t\t\t\t\tsearch_from = cur_start.line + 1; // for searching for \"end\"\n\t\t\t\t} else {\n\t\t\t\t\tblock_end = cur_start.line;\n\t\t\t\t\tsearch_from = cur_start.line - 1; // for searching for \"start\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(block_start === undefined) {\n\t\t\t\tfor(block_start = search_from; block_start >= 0; block_start--) {\n\t\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(block_end === undefined) {\n\t\t\t\tlineCount = cm.lineCount();\n\t\t\t\tfor(block_end = search_from; block_end < lineCount; block_end++) {\n\t\t\t\t\tline = cm.getLineHandle(block_end);\n\t\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcm.operation(function() {\n\t\t\t\tcm.replaceRange(\"\", {\n\t\t\t\t\tline: block_start,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: block_start + 1,\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t\tcm.replaceRange(\"\", {\n\t\t\t\t\tline: block_end - 1,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: block_end,\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t});\n\t\t\tcm.focus();\n\t\t}\n\t} else if(is_code === \"indented\") {\n\t\tif(cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\n\t\t\t// use selection\n\t\t\tblock_start = cur_start.line;\n\t\t\tblock_end = cur_end.line;\n\t\t\tif(cur_end.ch === 0) {\n\t\t\t\tblock_end--;\n\t\t\t}\n\t\t} else {\n\t\t\t// no selection, search for ends of this indented block\n\t\t\tfor(block_start = cur_start.line; block_start >= 0; block_start--) {\n\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\tif(line.text.match(/^\\s*$/)) {\n\t\t\t\t\t// empty or all whitespace - keep going\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tif(code_type(cm, block_start, line) !== \"indented\") {\n\t\t\t\t\t\tblock_start += 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlineCount = cm.lineCount();\n\t\t\tfor(block_end = cur_start.line; block_end < lineCount; block_end++) {\n\t\t\t\tline = cm.getLineHandle(block_end);\n\t\t\t\tif(line.text.match(/^\\s*$/)) {\n\t\t\t\t\t// empty or all whitespace - keep going\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tif(code_type(cm, block_end, line) !== \"indented\") {\n\t\t\t\t\t\tblock_end -= 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// if we are going to un-indent based on a selected set of lines, and the next line is indented too, we need to\n\t\t// insert a blank line so that the next line(s) continue to be indented code\n\t\tvar next_line = cm.getLineHandle(block_end + 1),\n\t\t\tnext_line_last_tok = next_line && cm.getTokenAt({\n\t\t\t\tline: block_end + 1,\n\t\t\t\tch: next_line.text.length - 1\n\t\t\t}),\n\t\t\tnext_line_indented = next_line_last_tok && token_state(next_line_last_tok).indentedCode;\n\t\tif(next_line_indented) {\n\t\t\tcm.replaceRange(\"\\n\", {\n\t\t\t\tline: block_end + 1,\n\t\t\t\tch: 0\n\t\t\t});\n\t\t}\n\n\t\tfor(var i = block_start; i <= block_end; i++) {\n\t\t\tcm.indentLine(i, \"subtract\"); // TODO: this doesn't get tracked in the history, so can't be undone :(\n\t\t}\n\t\tcm.focus();\n\t} else {\n\t\t// insert code formatting\n\t\tvar no_sel_and_starting_of_line = (cur_start.line === cur_end.line && cur_start.ch === cur_end.ch && cur_start.ch === 0);\n\t\tvar sel_multi = cur_start.line !== cur_end.line;\n\t\tif(no_sel_and_starting_of_line || sel_multi) {\n\t\t\tinsertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert);\n\t\t} else {\n\t\t\t_replaceSelection(cm, false, [\"`\", \"`\"]);\n\t\t}\n\t}\n}\n\n/**\n * Action for toggling blockquote.\n */\nfunction toggleBlockquote(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"quote\");\n}\n\n/**\n * Action for toggling heading size: normal -> h1 -> h2 -> h3 -> h4 -> h5 -> h6 -> normal\n */\nfunction toggleHeadingSmaller(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, \"smaller\");\n}\n\n/**\n * Action for toggling heading size: normal -> h6 -> h5 -> h4 -> h3 -> h2 -> h1 -> normal\n */\nfunction toggleHeadingBigger(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, \"bigger\");\n}\n\n/**\n * Action for toggling heading size 1\n */\nfunction toggleHeading1(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 1);\n}\n\n/**\n * Action for toggling heading size 2\n */\nfunction toggleHeading2(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 2);\n}\n\n/**\n * Action for toggling heading size 3\n */\nfunction toggleHeading3(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 3);\n}\n\n\n/**\n * Action for toggling ul.\n */\nfunction toggleUnorderedList(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"unordered-list\");\n}\n\n\n/**\n * Action for toggling ol.\n */\nfunction toggleOrderedList(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"ordered-list\");\n}\n\n/**\n * Action for clean block (remove headline, list, blockquote code, markers)\n */\nfunction cleanBlock(editor) {\n\tvar cm = editor.codemirror;\n\t_cleanBlock(cm);\n}\n\n/**\n * Action for drawing a link.\n */\nfunction drawLink(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\tvar url = \"http://\";\n\tif(options.promptURLs) {\n\t\turl = prompt(options.promptTexts.link);\n\t\tif(!url) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t_replaceSelection(cm, stat.link, options.insertTexts.link, url);\n}\n\n/**\n * Action for drawing an img.\n */\nfunction drawImage(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\tvar url = \"http://\";\n\tif(options.promptURLs) {\n\t\turl = prompt(options.promptTexts.image);\n\t\tif(!url) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t_replaceSelection(cm, stat.image, options.insertTexts.image, url);\n}\n\n/**\n * Action for drawing a table.\n */\nfunction drawTable(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\t_replaceSelection(cm, stat.table, options.insertTexts.table);\n}\n\n/**\n * Action for drawing a horizontal rule.\n */\nfunction drawHorizontalRule(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\t_replaceSelection(cm, stat.image, options.insertTexts.horizontalRule);\n}\n\n\n/**\n * Undo action.\n */\nfunction undo(editor) {\n\tvar cm = editor.codemirror;\n\tcm.undo();\n\tcm.focus();\n}\n\n\n/**\n * Redo action.\n */\nfunction redo(editor) {\n\tvar cm = editor.codemirror;\n\tcm.redo();\n\tcm.focus();\n}\n\n\n/**\n * Toggle side by side preview\n */\nfunction toggleSideBySide(editor) {\n\tvar cm = editor.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\tvar toolbarButton = editor.toolbarElements[\"side-by-side\"];\n\tvar useSideBySideListener = false;\n\tif(/editor-preview-active-side/.test(preview.className)) {\n\t\tpreview.className = preview.className.replace(\n\t\t\t/\\s*editor-preview-active-side\\s*/g, \"\"\n\t\t);\n\t\ttoolbarButton.className = toolbarButton.className.replace(/\\s*active\\s*/g, \"\");\n\t\twrapper.className = wrapper.className.replace(/\\s*CodeMirror-sided\\s*/g, \" \");\n\t} else {\n\t\t// When the preview button is clicked for the first time,\n\t\t// give some time for the transition from editor.css to fire and the view to slide from right to left,\n\t\t// instead of just appearing.\n\t\tsetTimeout(function() {\n\t\t\tif(!cm.getOption(\"fullScreen\"))\n\t\t\t\ttoggleFullScreen(editor);\n\t\t\tpreview.className += \" editor-preview-active-side\";\n\t\t}, 1);\n\t\ttoolbarButton.className += \" active\";\n\t\twrapper.className += \" CodeMirror-sided\";\n\t\tuseSideBySideListener = true;\n\t}\n\n\t// Hide normal preview if active\n\tvar previewNormal = wrapper.lastChild;\n\tif(/editor-preview-active/.test(previewNormal.className)) {\n\t\tpreviewNormal.className = previewNormal.className.replace(\n\t\t\t/\\s*editor-preview-active\\s*/g, \"\"\n\t\t);\n\t\tvar toolbar = editor.toolbarElements.preview;\n\t\tvar toolbar_div = wrapper.previousSibling;\n\t\ttoolbar.className = toolbar.className.replace(/\\s*active\\s*/g, \"\");\n\t\ttoolbar_div.className = toolbar_div.className.replace(/\\s*disabled-for-preview*/g, \"\");\n\t}\n\n\tvar sideBySideRenderingFunction = function() {\n\t\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\t};\n\n\tif(!cm.sideBySideRenderingFunction) {\n\t\tcm.sideBySideRenderingFunction = sideBySideRenderingFunction;\n\t}\n\n\tif(useSideBySideListener) {\n\t\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\t\tcm.on(\"update\", cm.sideBySideRenderingFunction);\n\t} else {\n\t\tcm.off(\"update\", cm.sideBySideRenderingFunction);\n\t}\n\n\t// Refresh to fix selection being off (#309)\n\tcm.refresh();\n}\n\n\n/**\n * Preview action.\n */\nfunction togglePreview(editor) {\n\tvar cm = editor.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar toolbar_div = wrapper.previousSibling;\n\tvar toolbar = editor.options.toolbar ? editor.toolbarElements.preview : false;\n\tvar preview = wrapper.lastChild;\n\tif(!preview || !/editor-preview/.test(preview.className)) {\n\t\tpreview = document.createElement(\"div\");\n\t\tpreview.className = \"editor-preview\";\n\t\twrapper.appendChild(preview);\n\t}\n\tif(/editor-preview-active/.test(preview.className)) {\n\t\tpreview.className = preview.className.replace(\n\t\t\t/\\s*editor-preview-active\\s*/g, \"\"\n\t\t);\n\t\tif(toolbar) {\n\t\t\ttoolbar.className = toolbar.className.replace(/\\s*active\\s*/g, \"\");\n\t\t\ttoolbar_div.className = toolbar_div.className.replace(/\\s*disabled-for-preview*/g, \"\");\n\t\t}\n\t} else {\n\t\t// When the preview button is clicked for the first time,\n\t\t// give some time for the transition from editor.css to fire and the view to slide from right to left,\n\t\t// instead of just appearing.\n\t\tsetTimeout(function() {\n\t\t\tpreview.className += \" editor-preview-active\";\n\t\t}, 1);\n\t\tif(toolbar) {\n\t\t\ttoolbar.className += \" active\";\n\t\t\ttoolbar_div.className += \" disabled-for-preview\";\n\t\t}\n\t}\n\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\n\t// Turn off side by side if needed\n\tvar sidebyside = cm.getWrapperElement().nextSibling;\n\tif(/editor-preview-active-side/.test(sidebyside.className))\n\t\ttoggleSideBySide(editor);\n}\n\nfunction _replaceSelection(cm, active, startEnd, url) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar text;\n\tvar start = startEnd[0];\n\tvar end = startEnd[1];\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tif(url) {\n\t\tend = end.replace(\"#url#\", url);\n\t}\n\tif(active) {\n\t\ttext = cm.getLine(startPoint.line);\n\t\tstart = text.slice(0, startPoint.ch);\n\t\tend = text.slice(startPoint.ch);\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 0\n\t\t});\n\t} else {\n\t\ttext = cm.getSelection();\n\t\tcm.replaceSelection(start + text + end);\n\n\t\tstartPoint.ch += start.length;\n\t\tif(startPoint !== endPoint) {\n\t\t\tendPoint.ch += start.length;\n\t\t}\n\t}\n\tcm.setSelection(startPoint, endPoint);\n\tcm.focus();\n}\n\n\nfunction _toggleHeading(cm, direction, size) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tfor(var i = startPoint.line; i <= endPoint.line; i++) {\n\t\t(function(i) {\n\t\t\tvar text = cm.getLine(i);\n\t\t\tvar currHeadingLevel = text.search(/[^#]/);\n\n\t\t\tif(direction !== undefined) {\n\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\tif(direction == \"bigger\") {\n\t\t\t\t\t\ttext = \"###### \" + text;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"# \" + text;\n\t\t\t\t\t}\n\t\t\t\t} else if(currHeadingLevel == 6 && direction == \"smaller\") {\n\t\t\t\t\ttext = text.substr(7);\n\t\t\t\t} else if(currHeadingLevel == 1 && direction == \"bigger\") {\n\t\t\t\t\ttext = text.substr(2);\n\t\t\t\t} else {\n\t\t\t\t\tif(direction == \"bigger\") {\n\t\t\t\t\t\ttext = text.substr(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"#\" + text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(size == 1) {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"# \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"# \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if(size == 2) {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"## \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"## \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"### \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"### \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcm.replaceRange(text, {\n\t\t\t\tline: i,\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: i,\n\t\t\t\tch: 99999999999999\n\t\t\t});\n\t\t})(i);\n\t}\n\tcm.focus();\n}\n\n\nfunction _toggleLine(cm, name) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar stat = getState(cm);\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tvar repl = {\n\t\t\"quote\": /^(\\s*)\\>\\s+/,\n\t\t\"unordered-list\": /^(\\s*)(\\*|\\-|\\+)\\s+/,\n\t\t\"ordered-list\": /^(\\s*)\\d+\\.\\s+/\n\t};\n\tvar map = {\n\t\t\"quote\": \"> \",\n\t\t\"unordered-list\": \"* \",\n\t\t\"ordered-list\": \"1. \"\n\t};\n\tfor(var i = startPoint.line; i <= endPoint.line; i++) {\n\t\t(function(i) {\n\t\t\tvar text = cm.getLine(i);\n\t\t\tif(stat[name]) {\n\t\t\t\ttext = text.replace(repl[name], \"$1\");\n\t\t\t} else {\n\t\t\t\ttext = map[name] + text;\n\t\t\t}\n\t\t\tcm.replaceRange(text, {\n\t\t\t\tline: i,\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: i,\n\t\t\t\tch: 99999999999999\n\t\t\t});\n\t\t})(i);\n\t}\n\tcm.focus();\n}\n\nfunction _toggleBlock(editor, type, start_chars, end_chars) {\n\tif(/editor-preview-active/.test(editor.codemirror.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tend_chars = (typeof end_chars === \"undefined\") ? start_chars : end_chars;\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\n\tvar text;\n\tvar start = start_chars;\n\tvar end = end_chars;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\n\tif(stat[type]) {\n\t\ttext = cm.getLine(startPoint.line);\n\t\tstart = text.slice(0, startPoint.ch);\n\t\tend = text.slice(startPoint.ch);\n\t\tif(type == \"bold\") {\n\t\t\tstart = start.replace(/(\\*\\*|__)(?![\\s\\S]*(\\*\\*|__))/, \"\");\n\t\t\tend = end.replace(/(\\*\\*|__)/, \"\");\n\t\t} else if(type == \"italic\") {\n\t\t\tstart = start.replace(/(\\*|_)(?![\\s\\S]*(\\*|_))/, \"\");\n\t\t\tend = end.replace(/(\\*|_)/, \"\");\n\t\t} else if(type == \"strikethrough\") {\n\t\t\tstart = start.replace(/(\\*\\*|~~)(?![\\s\\S]*(\\*\\*|~~))/, \"\");\n\t\t\tend = end.replace(/(\\*\\*|~~)/, \"\");\n\t\t}\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 99999999999999\n\t\t});\n\n\t\tif(type == \"bold\" || type == \"strikethrough\") {\n\t\t\tstartPoint.ch -= 2;\n\t\t\tif(startPoint !== endPoint) {\n\t\t\t\tendPoint.ch -= 2;\n\t\t\t}\n\t\t} else if(type == \"italic\") {\n\t\t\tstartPoint.ch -= 1;\n\t\t\tif(startPoint !== endPoint) {\n\t\t\t\tendPoint.ch -= 1;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ttext = cm.getSelection();\n\t\tif(type == \"bold\") {\n\t\t\ttext = text.split(\"**\").join(\"\");\n\t\t\ttext = text.split(\"__\").join(\"\");\n\t\t} else if(type == \"italic\") {\n\t\t\ttext = text.split(\"*\").join(\"\");\n\t\t\ttext = text.split(\"_\").join(\"\");\n\t\t} else if(type == \"strikethrough\") {\n\t\t\ttext = text.split(\"~~\").join(\"\");\n\t\t}\n\t\tcm.replaceSelection(start + text + end);\n\n\t\tstartPoint.ch += start_chars.length;\n\t\tendPoint.ch = startPoint.ch + text.length;\n\t}\n\n\tcm.setSelection(startPoint, endPoint);\n\tcm.focus();\n}\n\nfunction _cleanBlock(cm) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tvar text;\n\n\tfor(var line = startPoint.line; line <= endPoint.line; line++) {\n\t\ttext = cm.getLine(line);\n\t\ttext = text.replace(/^[ ]*([# ]+|\\*|\\-|[> ]+|[0-9]+(.|\\)))[ ]*/, \"\");\n\n\t\tcm.replaceRange(text, {\n\t\t\tline: line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: line,\n\t\t\tch: 99999999999999\n\t\t});\n\t}\n}\n\n// Merge the properties of one object into another.\nfunction _mergeProperties(target, source) {\n\tfor(var property in source) {\n\t\tif(source.hasOwnProperty(property)) {\n\t\t\tif(source[property] instanceof Array) {\n\t\t\t\ttarget[property] = source[property].concat(target[property] instanceof Array ? target[property] : []);\n\t\t\t} else if(\n\t\t\t\tsource[property] !== null &&\n\t\t\t\ttypeof source[property] === \"object\" &&\n\t\t\t\tsource[property].constructor === Object\n\t\t\t) {\n\t\t\t\ttarget[property] = _mergeProperties(target[property] || {}, source[property]);\n\t\t\t} else {\n\t\t\t\ttarget[property] = source[property];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn target;\n}\n\n// Merge an arbitrary number of objects into one.\nfunction extend(target) {\n\tfor(var i = 1; i < arguments.length; i++) {\n\t\ttarget = _mergeProperties(target, arguments[i]);\n\t}\n\n\treturn target;\n}\n\n/* The right word count in respect for CJK. */\nfunction wordCount(data) {\n\tvar pattern = /[a-zA-Z0-9_\\u0392-\\u03c9\\u0410-\\u04F9]+|[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af]+/g;\n\tvar m = data.match(pattern);\n\tvar count = 0;\n\tif(m === null) return count;\n\tfor(var i = 0; i < m.length; i++) {\n\t\tif(m[i].charCodeAt(0) >= 0x4E00) {\n\t\t\tcount += m[i].length;\n\t\t} else {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nvar toolbarBuiltInButtons = {\n\t\"bold\": {\n\t\tname: \"bold\",\n\t\taction: toggleBold,\n\t\tclassName: \"fa fa-bold\",\n\t\ttitle: \"Bold\",\n\t\tdefault: true\n\t},\n\t\"italic\": {\n\t\tname: \"italic\",\n\t\taction: toggleItalic,\n\t\tclassName: \"fa fa-italic\",\n\t\ttitle: \"Italic\",\n\t\tdefault: true\n\t},\n\t\"strikethrough\": {\n\t\tname: \"strikethrough\",\n\t\taction: toggleStrikethrough,\n\t\tclassName: \"fa fa-strikethrough\",\n\t\ttitle: \"Strikethrough\"\n\t},\n\t\"heading\": {\n\t\tname: \"heading\",\n\t\taction: toggleHeadingSmaller,\n\t\tclassName: \"fa fa-header\",\n\t\ttitle: \"Heading\",\n\t\tdefault: true\n\t},\n\t\"heading-smaller\": {\n\t\tname: \"heading-smaller\",\n\t\taction: toggleHeadingSmaller,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-smaller\",\n\t\ttitle: \"Smaller Heading\"\n\t},\n\t\"heading-bigger\": {\n\t\tname: \"heading-bigger\",\n\t\taction: toggleHeadingBigger,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-bigger\",\n\t\ttitle: \"Bigger Heading\"\n\t},\n\t\"heading-1\": {\n\t\tname: \"heading-1\",\n\t\taction: toggleHeading1,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-1\",\n\t\ttitle: \"Big Heading\"\n\t},\n\t\"heading-2\": {\n\t\tname: \"heading-2\",\n\t\taction: toggleHeading2,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-2\",\n\t\ttitle: \"Medium Heading\"\n\t},\n\t\"heading-3\": {\n\t\tname: \"heading-3\",\n\t\taction: toggleHeading3,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-3\",\n\t\ttitle: \"Small Heading\"\n\t},\n\t\"separator-1\": {\n\t\tname: \"separator-1\"\n\t},\n\t\"code\": {\n\t\tname: \"code\",\n\t\taction: toggleCodeBlock,\n\t\tclassName: \"fa fa-code\",\n\t\ttitle: \"Code\"\n\t},\n\t\"quote\": {\n\t\tname: \"quote\",\n\t\taction: toggleBlockquote,\n\t\tclassName: \"fa fa-quote-left\",\n\t\ttitle: \"Quote\",\n\t\tdefault: true\n\t},\n\t\"unordered-list\": {\n\t\tname: \"unordered-list\",\n\t\taction: toggleUnorderedList,\n\t\tclassName: \"fa fa-list-ul\",\n\t\ttitle: \"Generic List\",\n\t\tdefault: true\n\t},\n\t\"ordered-list\": {\n\t\tname: \"ordered-list\",\n\t\taction: toggleOrderedList,\n\t\tclassName: \"fa fa-list-ol\",\n\t\ttitle: \"Numbered List\",\n\t\tdefault: true\n\t},\n\t\"clean-block\": {\n\t\tname: \"clean-block\",\n\t\taction: cleanBlock,\n\t\tclassName: \"fa fa-eraser fa-clean-block\",\n\t\ttitle: \"Clean block\"\n\t},\n\t\"separator-2\": {\n\t\tname: \"separator-2\"\n\t},\n\t\"link\": {\n\t\tname: \"link\",\n\t\taction: drawLink,\n\t\tclassName: \"fa fa-link\",\n\t\ttitle: \"Create Link\",\n\t\tdefault: true\n\t},\n\t\"image\": {\n\t\tname: \"image\",\n\t\taction: drawImage,\n\t\tclassName: \"fa fa-picture-o\",\n\t\ttitle: \"Insert Image\",\n\t\tdefault: true\n\t},\n\t\"table\": {\n\t\tname: \"table\",\n\t\taction: drawTable,\n\t\tclassName: \"fa fa-table\",\n\t\ttitle: \"Insert Table\"\n\t},\n\t\"horizontal-rule\": {\n\t\tname: \"horizontal-rule\",\n\t\taction: drawHorizontalRule,\n\t\tclassName: \"fa fa-minus\",\n\t\ttitle: \"Insert Horizontal Line\"\n\t},\n\t\"separator-3\": {\n\t\tname: \"separator-3\"\n\t},\n\t\"preview\": {\n\t\tname: \"preview\",\n\t\taction: togglePreview,\n\t\tclassName: \"fa fa-eye no-disable\",\n\t\ttitle: \"Toggle Preview\",\n\t\tdefault: true\n\t},\n\t\"side-by-side\": {\n\t\tname: \"side-by-side\",\n\t\taction: toggleSideBySide,\n\t\tclassName: \"fa fa-columns no-disable no-mobile\",\n\t\ttitle: \"Toggle Side by Side\",\n\t\tdefault: true\n\t},\n\t\"fullscreen\": {\n\t\tname: \"fullscreen\",\n\t\taction: toggleFullScreen,\n\t\tclassName: \"fa fa-arrows-alt no-disable no-mobile\",\n\t\ttitle: \"Toggle Fullscreen\",\n\t\tdefault: true\n\t},\n\t\"separator-4\": {\n\t\tname: \"separator-4\"\n\t},\n\t\"guide\": {\n\t\tname: \"guide\",\n\t\taction: \"https://simplemde.com/markdown-guide\",\n\t\tclassName: \"fa fa-question-circle\",\n\t\ttitle: \"Markdown Guide\",\n\t\tdefault: true\n\t},\n\t\"separator-5\": {\n\t\tname: \"separator-5\"\n\t},\n\t\"undo\": {\n\t\tname: \"undo\",\n\t\taction: undo,\n\t\tclassName: \"fa fa-undo no-disable\",\n\t\ttitle: \"Undo\"\n\t},\n\t\"redo\": {\n\t\tname: \"redo\",\n\t\taction: redo,\n\t\tclassName: \"fa fa-repeat no-disable\",\n\t\ttitle: \"Redo\"\n\t}\n};\n\nvar insertTexts = {\n\tlink: [\"[\", \"](#url#)\"],\n\timage: [\"![](\", \"#url#)\"],\n\ttable: [\"\", \"\\n\\n| Column 1 | Column 2 | Column 3 |\\n| -------- | -------- | -------- |\\n| Text     | Text     | Text     |\\n\\n\"],\n\thorizontalRule: [\"\", \"\\n\\n-----\\n\\n\"]\n};\n\nvar promptTexts = {\n\tlink: \"URL for the link:\",\n\timage: \"URL of the image:\"\n};\n\nvar blockStyles = {\n\t\"bold\": \"**\",\n\t\"code\": \"```\",\n\t\"italic\": \"*\"\n};\n\n/**\n * Interface of SimpleMDE.\n */\nfunction SimpleMDE(options) {\n\t// Handle options parameter\n\toptions = options || {};\n\n\n\t// Used later to refer to it\"s parent\n\toptions.parent = this;\n\n\n\t// Check if Font Awesome needs to be auto downloaded\n\tvar autoDownloadFA = true;\n\n\tif(options.autoDownloadFontAwesome === false) {\n\t\tautoDownloadFA = false;\n\t}\n\n\tif(options.autoDownloadFontAwesome !== true) {\n\t\tvar styleSheets = document.styleSheets;\n\t\tfor(var i = 0; i < styleSheets.length; i++) {\n\t\t\tif(!styleSheets[i].href)\n\t\t\t\tcontinue;\n\n\t\t\tif(styleSheets[i].href.indexOf(\"//maxcdn.bootstrapcdn.com/font-awesome/\") > -1) {\n\t\t\t\tautoDownloadFA = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(autoDownloadFA) {\n\t\tvar link = document.createElement(\"link\");\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.href = \"https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css\";\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(link);\n\t}\n\n\n\t// Find the textarea to use\n\tif(options.element) {\n\t\tthis.element = options.element;\n\t} else if(options.element === null) {\n\t\t// This means that the element option was specified, but no element was found\n\t\tconsole.log(\"SimpleMDE: Error. No element was found.\");\n\t\treturn;\n\t}\n\n\n\t// Handle toolbar\n\tif(options.toolbar === undefined) {\n\t\t// Initialize\n\t\toptions.toolbar = [];\n\n\n\t\t// Loop over the built in buttons, to get the preferred order\n\t\tfor(var key in toolbarBuiltInButtons) {\n\t\t\tif(toolbarBuiltInButtons.hasOwnProperty(key)) {\n\t\t\t\tif(key.indexOf(\"separator-\") != -1) {\n\t\t\t\t\toptions.toolbar.push(\"|\");\n\t\t\t\t}\n\n\t\t\t\tif(toolbarBuiltInButtons[key].default === true || (options.showIcons && options.showIcons.constructor === Array && options.showIcons.indexOf(key) != -1)) {\n\t\t\t\t\toptions.toolbar.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// Handle status bar\n\tif(!options.hasOwnProperty(\"status\")) {\n\t\toptions.status = [\"autosave\", \"lines\", \"words\", \"cursor\"];\n\t}\n\n\n\t// Add default preview rendering function\n\tif(!options.previewRender) {\n\t\toptions.previewRender = function(plainText) {\n\t\t\t// Note: \"this\" refers to the options object\n\t\t\treturn this.parent.markdown(plainText);\n\t\t};\n\t}\n\n\n\t// Set default options for parsing config\n\toptions.parsingConfig = extend({\n\t\thighlightFormatting: true // needed for toggleCodeBlock to detect types of code\n\t}, options.parsingConfig || {});\n\n\n\t// Merging the insertTexts, with the given options\n\toptions.insertTexts = extend({}, insertTexts, options.insertTexts || {});\n\n\n\t// Merging the promptTexts, with the given options\n\toptions.promptTexts = promptTexts;\n\n\n\t// Merging the blockStyles, with the given options\n\toptions.blockStyles = extend({}, blockStyles, options.blockStyles || {});\n\n\n\t// Merging the shortcuts, with the given options\n\toptions.shortcuts = extend({}, shortcuts, options.shortcuts || {});\n\n\n\t// Change unique_id to uniqueId for backwards compatibility\n\tif(options.autosave != undefined && options.autosave.unique_id != undefined && options.autosave.unique_id != \"\")\n\t\toptions.autosave.uniqueId = options.autosave.unique_id;\n\n\n\t// Update this options\n\tthis.options = options;\n\n\n\t// Auto render\n\tthis.render();\n\n\n\t// The codemirror component is only available after rendering\n\t// so, the setter for the initialValue can only run after\n\t// the element has been rendered\n\tif(options.initialValue && (!this.options.autosave || this.options.autosave.foundSavedValue !== true)) {\n\t\tthis.value(options.initialValue);\n\t}\n}\n\n/**\n * Default markdown render.\n */\nSimpleMDE.prototype.markdown = function(text) {\n\tif(marked) {\n\t\t// Initialize\n\t\tvar markedOptions = {};\n\n\n\t\t// Update options\n\t\tif(this.options && this.options.renderingConfig && this.options.renderingConfig.singleLineBreaks === false) {\n\t\t\tmarkedOptions.breaks = false;\n\t\t} else {\n\t\t\tmarkedOptions.breaks = true;\n\t\t}\n\n\t\tif(this.options && this.options.renderingConfig && this.options.renderingConfig.codeSyntaxHighlighting === true && window.hljs) {\n\t\t\tmarkedOptions.highlight = function(code) {\n\t\t\t\treturn window.hljs.highlightAuto(code).value;\n\t\t\t};\n\t\t}\n\n\n\t\t// Set options\n\t\tmarked.setOptions(markedOptions);\n\n\n\t\t// Return\n\t\treturn marked(text);\n\t}\n};\n\n/**\n * Render editor to the given element.\n */\nSimpleMDE.prototype.render = function(el) {\n\tif(!el) {\n\t\tel = this.element || document.getElementsByTagName(\"textarea\")[0];\n\t}\n\n\tif(this._rendered && this._rendered === el) {\n\t\t// Already rendered.\n\t\treturn;\n\t}\n\n\tthis.element = el;\n\tvar options = this.options;\n\n\tvar self = this;\n\tvar keyMaps = {};\n\n\tfor(var key in options.shortcuts) {\n\t\t// null stands for \"do not bind this command\"\n\t\tif(options.shortcuts[key] !== null && bindings[key] !== null) {\n\t\t\t(function(key) {\n\t\t\t\tkeyMaps[fixShortcut(options.shortcuts[key])] = function() {\n\t\t\t\t\tbindings[key](self);\n\t\t\t\t};\n\t\t\t})(key);\n\t\t}\n\t}\n\n\tkeyMaps[\"Enter\"] = \"newlineAndIndentContinueMarkdownList\";\n\tkeyMaps[\"Tab\"] = \"tabAndIndentMarkdownList\";\n\tkeyMaps[\"Shift-Tab\"] = \"shiftTabAndUnindentMarkdownList\";\n\tkeyMaps[\"Esc\"] = function(cm) {\n\t\tif(cm.getOption(\"fullScreen\")) toggleFullScreen(self);\n\t};\n\n\tdocument.addEventListener(\"keydown\", function(e) {\n\t\te = e || window.event;\n\n\t\tif(e.keyCode == 27) {\n\t\t\tif(self.codemirror.getOption(\"fullScreen\")) toggleFullScreen(self);\n\t\t}\n\t}, false);\n\n\tvar mode, backdrop;\n\tif(options.spellChecker !== false) {\n\t\tmode = \"spell-checker\";\n\t\tbackdrop = options.parsingConfig;\n\t\tbackdrop.name = \"gfm\";\n\t\tbackdrop.gitHubSpice = false;\n\n\t\tCodeMirrorSpellChecker({\n\t\t\tcodeMirrorInstance: CodeMirror\n\t\t});\n\t} else {\n\t\tmode = options.parsingConfig;\n\t\tmode.name = \"gfm\";\n\t\tmode.gitHubSpice = false;\n\t}\n\n\tthis.codemirror = CodeMirror.fromTextArea(el, {\n\t\tmode: mode,\n\t\tbackdrop: backdrop,\n\t\ttheme: \"paper\",\n\t\ttabSize: (options.tabSize != undefined) ? options.tabSize : 2,\n\t\tindentUnit: (options.tabSize != undefined) ? options.tabSize : 2,\n\t\tindentWithTabs: (options.indentWithTabs === false) ? false : true,\n\t\tlineNumbers: false,\n\t\tautofocus: (options.autofocus === true) ? true : false,\n\t\textraKeys: keyMaps,\n\t\tlineWrapping: (options.lineWrapping === false) ? false : true,\n\t\tallowDropFileTypes: [\"text/plain\"],\n\t\tplaceholder: options.placeholder || el.getAttribute(\"placeholder\") || \"\",\n\t\tstyleSelectedText: (options.styleSelectedText != undefined) ? options.styleSelectedText : true\n\t});\n\n\tif(options.forceSync === true) {\n\t\tvar cm = this.codemirror;\n\t\tcm.on(\"change\", function() {\n\t\t\tcm.save();\n\t\t});\n\t}\n\n\tthis.gui = {};\n\n\tif(options.toolbar !== false) {\n\t\tthis.gui.toolbar = this.createToolbar();\n\t}\n\tif(options.status !== false) {\n\t\tthis.gui.statusbar = this.createStatusbar();\n\t}\n\tif(options.autosave != undefined && options.autosave.enabled === true) {\n\t\tthis.autosave();\n\t}\n\n\tthis.gui.sideBySide = this.createSideBySide();\n\n\tthis._rendered = this.element;\n\n\n\t// Fixes CodeMirror bug (#344)\n\tvar temp_cm = this.codemirror;\n\tsetTimeout(function() {\n\t\ttemp_cm.refresh();\n\t}.bind(temp_cm), 0);\n};\n\n// Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem throw QuotaExceededError. We're going to detect this and set a variable accordingly.\nfunction isLocalStorageAvailable() {\n\tif(typeof localStorage === \"object\") {\n\t\ttry {\n\t\t\tlocalStorage.setItem(\"smde_localStorage\", 1);\n\t\t\tlocalStorage.removeItem(\"smde_localStorage\");\n\t\t} catch(e) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nSimpleMDE.prototype.autosave = function() {\n\tif(isLocalStorageAvailable()) {\n\t\tvar simplemde = this;\n\n\t\tif(this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == \"\") {\n\t\t\tconsole.log(\"SimpleMDE: You must set a uniqueId to use the autosave feature\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(simplemde.element.form != null && simplemde.element.form != undefined) {\n\t\t\tsimplemde.element.form.addEventListener(\"submit\", function() {\n\t\t\t\tlocalStorage.removeItem(\"smde_\" + simplemde.options.autosave.uniqueId);\n\t\t\t});\n\t\t}\n\n\t\tif(this.options.autosave.loaded !== true) {\n\t\t\tif(typeof localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId) == \"string\" && localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId) != \"\") {\n\t\t\t\tthis.codemirror.setValue(localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId));\n\t\t\t\tthis.options.autosave.foundSavedValue = true;\n\t\t\t}\n\n\t\t\tthis.options.autosave.loaded = true;\n\t\t}\n\n\t\tlocalStorage.setItem(\"smde_\" + this.options.autosave.uniqueId, simplemde.value());\n\n\t\tvar el = document.getElementById(\"autosaved\");\n\t\tif(el != null && el != undefined && el != \"\") {\n\t\t\tvar d = new Date();\n\t\t\tvar hh = d.getHours();\n\t\t\tvar m = d.getMinutes();\n\t\t\tvar dd = \"am\";\n\t\t\tvar h = hh;\n\t\t\tif(h >= 12) {\n\t\t\t\th = hh - 12;\n\t\t\t\tdd = \"pm\";\n\t\t\t}\n\t\t\tif(h == 0) {\n\t\t\t\th = 12;\n\t\t\t}\n\t\t\tm = m < 10 ? \"0\" + m : m;\n\n\t\t\tel.innerHTML = \"Autosaved: \" + h + \":\" + m + \" \" + dd;\n\t\t}\n\n\t\tthis.autosaveTimeoutId = setTimeout(function() {\n\t\t\tsimplemde.autosave();\n\t\t}, this.options.autosave.delay || 10000);\n\t} else {\n\t\tconsole.log(\"SimpleMDE: localStorage not available, cannot autosave\");\n\t}\n};\n\nSimpleMDE.prototype.clearAutosavedValue = function() {\n\tif(isLocalStorageAvailable()) {\n\t\tif(this.options.autosave == undefined || this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == \"\") {\n\t\t\tconsole.log(\"SimpleMDE: You must set a uniqueId to clear the autosave value\");\n\t\t\treturn;\n\t\t}\n\n\t\tlocalStorage.removeItem(\"smde_\" + this.options.autosave.uniqueId);\n\t} else {\n\t\tconsole.log(\"SimpleMDE: localStorage not available, cannot autosave\");\n\t}\n};\n\nSimpleMDE.prototype.createSideBySide = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\n\tif(!preview || !/editor-preview-side/.test(preview.className)) {\n\t\tpreview = document.createElement(\"div\");\n\t\tpreview.className = \"editor-preview-side\";\n\t\twrapper.parentNode.insertBefore(preview, wrapper.nextSibling);\n\t}\n\n\t// Syncs scroll  editor -> preview\n\tvar cScroll = false;\n\tvar pScroll = false;\n\tcm.on(\"scroll\", function(v) {\n\t\tif(cScroll) {\n\t\t\tcScroll = false;\n\t\t\treturn;\n\t\t}\n\t\tpScroll = true;\n\t\tvar height = v.getScrollInfo().height - v.getScrollInfo().clientHeight;\n\t\tvar ratio = parseFloat(v.getScrollInfo().top) / height;\n\t\tvar move = (preview.scrollHeight - preview.clientHeight) * ratio;\n\t\tpreview.scrollTop = move;\n\t});\n\n\t// Syncs scroll  preview -> editor\n\tpreview.onscroll = function() {\n\t\tif(pScroll) {\n\t\t\tpScroll = false;\n\t\t\treturn;\n\t\t}\n\t\tcScroll = true;\n\t\tvar height = preview.scrollHeight - preview.clientHeight;\n\t\tvar ratio = parseFloat(preview.scrollTop) / height;\n\t\tvar move = (cm.getScrollInfo().height - cm.getScrollInfo().clientHeight) * ratio;\n\t\tcm.scrollTo(0, move);\n\t};\n\treturn preview;\n};\n\nSimpleMDE.prototype.createToolbar = function(items) {\n\titems = items || this.options.toolbar;\n\n\tif(!items || items.length === 0) {\n\t\treturn;\n\t}\n\tvar i;\n\tfor(i = 0; i < items.length; i++) {\n\t\tif(toolbarBuiltInButtons[items[i]] != undefined) {\n\t\t\titems[i] = toolbarBuiltInButtons[items[i]];\n\t\t}\n\t}\n\n\tvar bar = document.createElement(\"div\");\n\tbar.className = \"editor-toolbar\";\n\n\tvar self = this;\n\n\tvar toolbarData = {};\n\tself.toolbar = items;\n\n\tfor(i = 0; i < items.length; i++) {\n\t\tif(items[i].name == \"guide\" && self.options.toolbarGuideIcon === false)\n\t\t\tcontinue;\n\n\t\tif(self.options.hideIcons && self.options.hideIcons.indexOf(items[i].name) != -1)\n\t\t\tcontinue;\n\n\t\t// Fullscreen does not work well on mobile devices (even tablets)\n\t\t// In the future, hopefully this can be resolved\n\t\tif((items[i].name == \"fullscreen\" || items[i].name == \"side-by-side\") && isMobile())\n\t\t\tcontinue;\n\n\n\t\t// Don't include trailing separators\n\t\tif(items[i] === \"|\") {\n\t\t\tvar nonSeparatorIconsFollow = false;\n\n\t\t\tfor(var x = (i + 1); x < items.length; x++) {\n\t\t\t\tif(items[x] !== \"|\" && (!self.options.hideIcons || self.options.hideIcons.indexOf(items[x].name) == -1)) {\n\t\t\t\t\tnonSeparatorIconsFollow = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!nonSeparatorIconsFollow)\n\t\t\t\tcontinue;\n\t\t}\n\n\n\t\t// Create the icon and append to the toolbar\n\t\t(function(item) {\n\t\t\tvar el;\n\t\t\tif(item === \"|\") {\n\t\t\t\tel = createSep();\n\t\t\t} else {\n\t\t\t\tel = createIcon(item, self.options.toolbarTips, self.options.shortcuts);\n\t\t\t}\n\n\t\t\t// bind events, special for info\n\t\t\tif(item.action) {\n\t\t\t\tif(typeof item.action === \"function\") {\n\t\t\t\t\tel.onclick = function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\titem.action(self);\n\t\t\t\t\t};\n\t\t\t\t} else if(typeof item.action === \"string\") {\n\t\t\t\t\tel.href = item.action;\n\t\t\t\t\tel.target = \"_blank\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttoolbarData[item.name || item] = el;\n\t\t\tbar.appendChild(el);\n\t\t})(items[i]);\n\t}\n\n\tself.toolbarElements = toolbarData;\n\n\tvar cm = this.codemirror;\n\tcm.on(\"cursorActivity\", function() {\n\t\tvar stat = getState(cm);\n\n\t\tfor(var key in toolbarData) {\n\t\t\t(function(key) {\n\t\t\t\tvar el = toolbarData[key];\n\t\t\t\tif(stat[key]) {\n\t\t\t\t\tel.className += \" active\";\n\t\t\t\t} else if(key != \"fullscreen\" && key != \"side-by-side\") {\n\t\t\t\t\tel.className = el.className.replace(/\\s*active\\s*/g, \"\");\n\t\t\t\t}\n\t\t\t})(key);\n\t\t}\n\t});\n\n\tvar cmWrapper = cm.getWrapperElement();\n\tcmWrapper.parentNode.insertBefore(bar, cmWrapper);\n\treturn bar;\n};\n\nSimpleMDE.prototype.createStatusbar = function(status) {\n\t// Initialize\n\tstatus = status || this.options.status;\n\tvar options = this.options;\n\tvar cm = this.codemirror;\n\n\n\t// Make sure the status variable is valid\n\tif(!status || status.length === 0)\n\t\treturn;\n\n\n\t// Set up the built-in items\n\tvar items = [];\n\tvar i, onUpdate, defaultValue;\n\n\tfor(i = 0; i < status.length; i++) {\n\t\t// Reset some values\n\t\tonUpdate = undefined;\n\t\tdefaultValue = undefined;\n\n\n\t\t// Handle if custom or not\n\t\tif(typeof status[i] === \"object\") {\n\t\t\titems.push({\n\t\t\t\tclassName: status[i].className,\n\t\t\t\tdefaultValue: status[i].defaultValue,\n\t\t\t\tonUpdate: status[i].onUpdate\n\t\t\t});\n\t\t} else {\n\t\t\tvar name = status[i];\n\n\t\t\tif(name === \"words\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = wordCount(cm.getValue());\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tel.innerHTML = wordCount(cm.getValue());\n\t\t\t\t};\n\t\t\t} else if(name === \"lines\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = cm.lineCount();\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tel.innerHTML = cm.lineCount();\n\t\t\t\t};\n\t\t\t} else if(name === \"cursor\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = \"0:0\";\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tvar pos = cm.getCursor();\n\t\t\t\t\tel.innerHTML = pos.line + \":\" + pos.ch;\n\t\t\t\t};\n\t\t\t} else if(name === \"autosave\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tif(options.autosave != undefined && options.autosave.enabled === true) {\n\t\t\t\t\t\tel.setAttribute(\"id\", \"autosaved\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\titems.push({\n\t\t\t\tclassName: name,\n\t\t\t\tdefaultValue: defaultValue,\n\t\t\t\tonUpdate: onUpdate\n\t\t\t});\n\t\t}\n\t}\n\n\n\t// Create element for the status bar\n\tvar bar = document.createElement(\"div\");\n\tbar.className = \"editor-statusbar\";\n\n\n\t// Create a new span for each item\n\tfor(i = 0; i < items.length; i++) {\n\t\t// Store in temporary variable\n\t\tvar item = items[i];\n\n\n\t\t// Create span element\n\t\tvar el = document.createElement(\"span\");\n\t\tel.className = item.className;\n\n\n\t\t// Ensure the defaultValue is a function\n\t\tif(typeof item.defaultValue === \"function\") {\n\t\t\titem.defaultValue(el);\n\t\t}\n\n\n\t\t// Ensure the onUpdate is a function\n\t\tif(typeof item.onUpdate === \"function\") {\n\t\t\t// Create a closure around the span of the current action, then execute the onUpdate handler\n\t\t\tthis.codemirror.on(\"update\", (function(el, item) {\n\t\t\t\treturn function() {\n\t\t\t\t\titem.onUpdate(el);\n\t\t\t\t};\n\t\t\t}(el, item)));\n\t\t}\n\n\n\t\t// Append the item to the status bar\n\t\tbar.appendChild(el);\n\t}\n\n\n\t// Insert the status bar into the DOM\n\tvar cmWrapper = this.codemirror.getWrapperElement();\n\tcmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);\n\treturn bar;\n};\n\n/**\n * Get or set the text content.\n */\nSimpleMDE.prototype.value = function(val) {\n\tif(val === undefined) {\n\t\treturn this.codemirror.getValue();\n\t} else {\n\t\tthis.codemirror.getDoc().setValue(val);\n\t\treturn this;\n\t}\n};\n\n\n/**\n * Bind static methods for exports.\n */\nSimpleMDE.toggleBold = toggleBold;\nSimpleMDE.toggleItalic = toggleItalic;\nSimpleMDE.toggleStrikethrough = toggleStrikethrough;\nSimpleMDE.toggleBlockquote = toggleBlockquote;\nSimpleMDE.toggleHeadingSmaller = toggleHeadingSmaller;\nSimpleMDE.toggleHeadingBigger = toggleHeadingBigger;\nSimpleMDE.toggleHeading1 = toggleHeading1;\nSimpleMDE.toggleHeading2 = toggleHeading2;\nSimpleMDE.toggleHeading3 = toggleHeading3;\nSimpleMDE.toggleCodeBlock = toggleCodeBlock;\nSimpleMDE.toggleUnorderedList = toggleUnorderedList;\nSimpleMDE.toggleOrderedList = toggleOrderedList;\nSimpleMDE.cleanBlock = cleanBlock;\nSimpleMDE.drawLink = drawLink;\nSimpleMDE.drawImage = drawImage;\nSimpleMDE.drawTable = drawTable;\nSimpleMDE.drawHorizontalRule = drawHorizontalRule;\nSimpleMDE.undo = undo;\nSimpleMDE.redo = redo;\nSimpleMDE.togglePreview = togglePreview;\nSimpleMDE.toggleSideBySide = toggleSideBySide;\nSimpleMDE.toggleFullScreen = toggleFullScreen;\n\n/**\n * Bind instance methods for exports.\n */\nSimpleMDE.prototype.toggleBold = function() {\n\ttoggleBold(this);\n};\nSimpleMDE.prototype.toggleItalic = function() {\n\ttoggleItalic(this);\n};\nSimpleMDE.prototype.toggleStrikethrough = function() {\n\ttoggleStrikethrough(this);\n};\nSimpleMDE.prototype.toggleBlockquote = function() {\n\ttoggleBlockquote(this);\n};\nSimpleMDE.prototype.toggleHeadingSmaller = function() {\n\ttoggleHeadingSmaller(this);\n};\nSimpleMDE.prototype.toggleHeadingBigger = function() {\n\ttoggleHeadingBigger(this);\n};\nSimpleMDE.prototype.toggleHeading1 = function() {\n\ttoggleHeading1(this);\n};\nSimpleMDE.prototype.toggleHeading2 = function() {\n\ttoggleHeading2(this);\n};\nSimpleMDE.prototype.toggleHeading3 = function() {\n\ttoggleHeading3(this);\n};\nSimpleMDE.prototype.toggleCodeBlock = function() {\n\ttoggleCodeBlock(this);\n};\nSimpleMDE.prototype.toggleUnorderedList = function() {\n\ttoggleUnorderedList(this);\n};\nSimpleMDE.prototype.toggleOrderedList = function() {\n\ttoggleOrderedList(this);\n};\nSimpleMDE.prototype.cleanBlock = function() {\n\tcleanBlock(this);\n};\nSimpleMDE.prototype.drawLink = function() {\n\tdrawLink(this);\n};\nSimpleMDE.prototype.drawImage = function() {\n\tdrawImage(this);\n};\nSimpleMDE.prototype.drawTable = function() {\n\tdrawTable(this);\n};\nSimpleMDE.prototype.drawHorizontalRule = function() {\n\tdrawHorizontalRule(this);\n};\nSimpleMDE.prototype.undo = function() {\n\tundo(this);\n};\nSimpleMDE.prototype.redo = function() {\n\tredo(this);\n};\nSimpleMDE.prototype.togglePreview = function() {\n\ttogglePreview(this);\n};\nSimpleMDE.prototype.toggleSideBySide = function() {\n\ttoggleSideBySide(this);\n};\nSimpleMDE.prototype.toggleFullScreen = function() {\n\ttoggleFullScreen(this);\n};\n\nSimpleMDE.prototype.isPreviewActive = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.lastChild;\n\n\treturn /editor-preview-active/.test(preview.className);\n};\n\nSimpleMDE.prototype.isSideBySideActive = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\n\treturn /editor-preview-active-side/.test(preview.className);\n};\n\nSimpleMDE.prototype.isFullscreenActive = function() {\n\tvar cm = this.codemirror;\n\n\treturn cm.getOption(\"fullScreen\");\n};\n\nSimpleMDE.prototype.getState = function() {\n\tvar cm = this.codemirror;\n\n\treturn getState(cm);\n};\n\nSimpleMDE.prototype.toTextArea = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\n\tif(wrapper.parentNode) {\n\t\tif(this.gui.toolbar) {\n\t\t\twrapper.parentNode.removeChild(this.gui.toolbar);\n\t\t}\n\t\tif(this.gui.statusbar) {\n\t\t\twrapper.parentNode.removeChild(this.gui.statusbar);\n\t\t}\n\t\tif(this.gui.sideBySide) {\n\t\t\twrapper.parentNode.removeChild(this.gui.sideBySide);\n\t\t}\n\t}\n\n\tcm.toTextArea();\n\n\tif(this.autosaveTimeoutId) {\n\t\tclearTimeout(this.autosaveTimeoutId);\n\t\tthis.autosaveTimeoutId = undefined;\n\t\tthis.clearAutosavedValue();\n\t}\n};\n\nmodule.exports = SimpleMDE;","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder\";\n    var placeHolder = cm.getOption(\"placeholder\")\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder)\n    elt.appendChild(placeHolder)\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n\n    if (empty) setPlaceholder(cm);\n    else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \"\");\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Because sometimes you need to mark the selected *text*.\n//\n// Adds an option 'styleSelectedText' which, when enabled, gives\n// selected text the CSS class given as option value, or\n// \"CodeMirror-selectedtext\" when the value is not a string.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"styleSelectedText\", false, function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.state.markedSelection = [];\n      cm.state.markedSelectionStyle = typeof val == \"string\" ? val : \"CodeMirror-selectedtext\";\n      reset(cm);\n      cm.on(\"cursorActivity\", onCursorActivity);\n      cm.on(\"change\", onChange);\n    } else if (!val && prev) {\n      cm.off(\"cursorActivity\", onCursorActivity);\n      cm.off(\"change\", onChange);\n      clear(cm);\n      cm.state.markedSelection = cm.state.markedSelectionStyle = null;\n    }\n  });\n\n  function onCursorActivity(cm) {\n    if (cm.state.markedSelection)\n      cm.operation(function() { update(cm); });\n  }\n\n  function onChange(cm) {\n    if (cm.state.markedSelection && cm.state.markedSelection.length)\n      cm.operation(function() { clear(cm); });\n  }\n\n  var CHUNK_SIZE = 8;\n  var Pos = CodeMirror.Pos;\n  var cmp = CodeMirror.cmpPos;\n\n  function coverRange(cm, from, to, addAt) {\n    if (cmp(from, to) == 0) return;\n    var array = cm.state.markedSelection;\n    var cls = cm.state.markedSelectionStyle;\n    for (var line = from.line;;) {\n      var start = line == from.line ? from : Pos(line, 0);\n      var endLine = line + CHUNK_SIZE, atEnd = endLine >= to.line;\n      var end = atEnd ? to : Pos(endLine, 0);\n      var mark = cm.markText(start, end, {className: cls});\n      if (addAt == null) array.push(mark);\n      else array.splice(addAt++, 0, mark);\n      if (atEnd) break;\n      line = endLine;\n    }\n  }\n\n  function clear(cm) {\n    var array = cm.state.markedSelection;\n    for (var i = 0; i < array.length; ++i) array[i].clear();\n    array.length = 0;\n  }\n\n  function reset(cm) {\n    clear(cm);\n    var ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++)\n      coverRange(cm, ranges[i].from(), ranges[i].to());\n  }\n\n  function update(cm) {\n    if (!cm.somethingSelected()) return clear(cm);\n    if (cm.listSelections().length > 1) return reset(cm);\n\n    var from = cm.getCursor(\"start\"), to = cm.getCursor(\"end\");\n\n    var array = cm.state.markedSelection;\n    if (!array.length) return coverRange(cm, from, to);\n\n    var coverStart = array[0].find(), coverEnd = array[array.length - 1].find();\n    if (!coverStart || !coverEnd || to.line - from.line <= CHUNK_SIZE ||\n        cmp(from, coverEnd.to) >= 0 || cmp(to, coverStart.from) <= 0)\n      return reset(cm);\n\n    while (cmp(from, coverStart.from) > 0) {\n      array.shift().clear();\n      coverStart = array[0].find();\n    }\n    if (cmp(from, coverStart.from) < 0) {\n      if (coverStart.to.line - from.line < CHUNK_SIZE) {\n        array.shift().clear();\n        coverRange(cm, from, coverStart.to, 0);\n      } else {\n        coverRange(cm, from, coverStart.from, 0);\n      }\n    }\n\n    while (cmp(to, coverEnd.to) < 0) {\n      array.pop().clear();\n      coverEnd = array[array.length - 1].find();\n    }\n    if (cmp(to, coverEnd.to) > 0) {\n      if (to.line - coverEnd.from.line < CHUNK_SIZE) {\n        array.pop().clear();\n        coverRange(cm, coverEnd.from, to);\n      } else {\n        coverRange(cm, coverEnd.to, to);\n      }\n    }\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('markdown-editor',{model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\"content\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"markdown-wrapper\"},[_c('textarea',{ref:\"editor\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"markdown-wrapper\">\r\n    <textarea ref=\"editor\"></textarea>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Simplemde from 'simplemde'\r\nimport 'simplemde/dist/simplemde.min.css'\r\nexport default {\r\n  naem: 'MarkdownEditor',\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    options: {\r\n      type: Object,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    },\r\n    localCache: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      editor: null\r\n    }\r\n  },\r\n  methods: {\r\n    addEvents () {\r\n      this.editor.codemirror.on('change', () => {\r\n        let value = this.editor.value()\r\n        if (this.localCache) localStorage.markdownContent = value\r\n        this.$emit('input', value)\r\n        this.$emit('on-change', value)\r\n      })\r\n      this.editor.codemirror.on('focus', () => {\r\n        this.$emit('on-focus', this.editor.value())\r\n      })\r\n      this.editor.codemirror.on('blur', () => {\r\n        this.$emit('on-blur', this.editor.value())\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.editor = new Simplemde(Object.assign(this.options, {\r\n      element: this.$refs.editor\r\n    }))\r\n    /**\r\n     * 事件列表为Codemirror编辑器的事件，更多事件类型，请参考：\r\n     * https://codemirror.net/doc/manual.html#events\r\n     */\r\n    this.addEvents()\r\n    let content = localStorage.markdownContent\r\n    if (content) this.editor.value(content)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.markdown-wrapper{\r\n  .editor-toolbar.fullscreen{\r\n    z-index: 9999;\r\n  }\r\n  .CodeMirror-fullscreen{\r\n    z-index: 9999;\r\n  }\r\n  .CodeMirror-fullscreen ~ .editor-preview-side{\r\n    z-index: 9999;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.4@babel-loader/lib/index.js!../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.4@babel-loader/lib/index.js!../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./markdown.vue?vue&type=template&id=cd159302&\"\nimport script from \"./markdown.vue?vue&type=script&lang=js&\"\nexport * from \"./markdown.vue?vue&type=script&lang=js&\"\nimport style0 from \"./markdown.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"markdown.vue\"\nexport default component.exports","import MarkdownEditor from './markdown.vue'\r\nexport default MarkdownEditor\r\n","<template>\r\n  <div>\r\n    <markdown-editor v-model=\"content\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MarkdownEditor from '_c/markdown'\r\nexport default {\r\n  name: 'markdown_page',\r\n  components: {\r\n    MarkdownEditor\r\n  },\r\n  data () {\r\n    return {\r\n      content: ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.0.4@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.0.4@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./markdown.vue?vue&type=template&id=44aca0cf&\"\nimport script from \"./markdown.vue?vue&type=script&lang=js&\"\nexport * from \"./markdown.vue?vue&type=script&lang=js&\"\nimport style0 from \"./markdown.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"markdown.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/_css-loader@1.0.0@css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/_css-loader@1.0.0@css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=less&\"","/* globals chrome: false */\n/* globals __dirname: false */\n/* globals require: false */\n/* globals Buffer: false */\n/* globals module: false */\n\n/**\n * Typo is a JavaScript implementation of a spellchecker using hunspell-style \n * dictionaries.\n */\n\nvar Typo;\n\n(function () {\n\"use strict\";\n\n/**\n * Typo constructor.\n *\n * @param {String} [dictionary] The locale code of the dictionary being used. e.g.,\n *                              \"en_US\". This is only used to auto-load dictionaries.\n * @param {String} [affData]    The data from the dictionary's .aff file. If omitted\n *                              and Typo.js is being used in a Chrome extension, the .aff\n *                              file will be loaded automatically from\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].aff\n *                              In other environments, it will be loaded from\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].aff\n * @param {String} [wordsData]  The data from the dictionary's .dic file. If omitted\n *                              and Typo.js is being used in a Chrome extension, the .dic\n *                              file will be loaded automatically from\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].dic\n *                              In other environments, it will be loaded from\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].dic\n * @param {Object} [settings]   Constructor settings. Available properties are:\n *                              {String} [dictionaryPath]: path to load dictionary from in non-chrome\n *                              environment.\n *                              {Object} [flags]: flag information.\n *                              {Boolean} [asyncLoad]: If true, affData and wordsData will be loaded\n *                              asynchronously.\n *                              {Function} [loadedCallback]: Called when both affData and wordsData\n *                              have been loaded. Only used if asyncLoad is set to true. The parameter\n *                              is the instantiated Typo object.\n *\n * @returns {Typo} A Typo object.\n */\n\nTypo = function (dictionary, affData, wordsData, settings) {\n\tsettings = settings || {};\n\n\tthis.dictionary = null;\n\t\n\tthis.rules = {};\n\tthis.dictionaryTable = {};\n\t\n\tthis.compoundRules = [];\n\tthis.compoundRuleCodes = {};\n\t\n\tthis.replacementTable = [];\n\t\n\tthis.flags = settings.flags || {}; \n\t\n\tthis.memoized = {};\n\n\tthis.loaded = false;\n\t\n\tvar self = this;\n\t\n\tvar path;\n\t\n\t// Loop-control variables.\n\tvar i, j, _len, _jlen;\n\t\n\tif (dictionary) {\n\t\tself.dictionary = dictionary;\n\t\t\n\t\t// If the data is preloaded, just setup the Typo object.\n\t\tif (affData && wordsData) {\n\t\t\tsetup();\n\t\t}\n\t\t// Loading data for Chrome extentions.\n\t\telse if (typeof window !== 'undefined' && 'chrome' in window && 'extension' in window.chrome && 'getURL' in window.chrome.extension) {\n\t\t\tif (settings.dictionaryPath) {\n\t\t\t\tpath = settings.dictionaryPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = \"typo/dictionaries\";\n\t\t\t}\n\t\t\t\n\t\t\tif (!affData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\"), setAffData);\n\t\t\tif (!wordsData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\"), setWordsData);\n\t\t}\n\t\telse {\n\t\t\tif (settings.dictionaryPath) {\n\t\t\t\tpath = settings.dictionaryPath;\n\t\t\t}\n\t\t\telse if (typeof __dirname !== 'undefined') {\n\t\t\t\tpath = __dirname + '/dictionaries';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = './dictionaries';\n\t\t\t}\n\t\t\t\n\t\t\tif (!affData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\", setAffData);\n\t\t\tif (!wordsData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\", setWordsData);\n\t\t}\n\t}\n\t\n\tfunction readDataFile(url, setFunc) {\n\t\tvar response = self._readFile(url, null, settings.asyncLoad);\n\t\t\n\t\tif (settings.asyncLoad) {\n\t\t\tresponse.then(function(data) {\n\t\t\t\tsetFunc(data);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tsetFunc(response);\n\t\t}\n\t}\n\n\tfunction setAffData(data) {\n\t\taffData = data;\n\n\t\tif (wordsData) {\n\t\t\tsetup();\n\t\t}\n\t}\n\n\tfunction setWordsData(data) {\n\t\twordsData = data;\n\n\t\tif (affData) {\n\t\t\tsetup();\n\t\t}\n\t}\n\n\tfunction setup() {\n\t\tself.rules = self._parseAFF(affData);\n\t\t\n\t\t// Save the rule codes that are used in compound rules.\n\t\tself.compoundRuleCodes = {};\n\t\t\n\t\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n\t\t\tvar rule = self.compoundRules[i];\n\t\t\t\n\t\t\tfor (j = 0, _jlen = rule.length; j < _jlen; j++) {\n\t\t\t\tself.compoundRuleCodes[rule[j]] = [];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If we add this ONLYINCOMPOUND flag to self.compoundRuleCodes, then _parseDIC\n\t\t// will do the work of saving the list of words that are compound-only.\n\t\tif (\"ONLYINCOMPOUND\" in self.flags) {\n\t\t\tself.compoundRuleCodes[self.flags.ONLYINCOMPOUND] = [];\n\t\t}\n\t\t\n\t\tself.dictionaryTable = self._parseDIC(wordsData);\n\t\t\n\t\t// Get rid of any codes from the compound rule codes that are never used \n\t\t// (or that were special regex characters).  Not especially necessary... \n\t\tfor (i in self.compoundRuleCodes) {\n\t\t\tif (self.compoundRuleCodes[i].length === 0) {\n\t\t\t\tdelete self.compoundRuleCodes[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Build the full regular expressions for each compound rule.\n\t\t// I have a feeling (but no confirmation yet) that this method of \n\t\t// testing for compound words is probably slow.\n\t\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n\t\t\tvar ruleText = self.compoundRules[i];\n\t\t\t\n\t\t\tvar expressionText = \"\";\n\t\t\t\n\t\t\tfor (j = 0, _jlen = ruleText.length; j < _jlen; j++) {\n\t\t\t\tvar character = ruleText[j];\n\t\t\t\t\n\t\t\t\tif (character in self.compoundRuleCodes) {\n\t\t\t\t\texpressionText += \"(\" + self.compoundRuleCodes[character].join(\"|\") + \")\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texpressionText += character;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tself.compoundRules[i] = new RegExp(expressionText, \"i\");\n\t\t}\n\t\t\n\t\tself.loaded = true;\n\t\t\n\t\tif (settings.asyncLoad && settings.loadedCallback) {\n\t\t\tsettings.loadedCallback(self);\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\nTypo.prototype = {\n\t/**\n\t * Loads a Typo instance from a hash of all of the Typo properties.\n\t *\n\t * @param object obj A hash of Typo properties, probably gotten from a JSON.parse(JSON.stringify(typo_instance)).\n\t */\n\t\n\tload : function (obj) {\n\t\tfor (var i in obj) {\n\t\t\tif (obj.hasOwnProperty(i)) {\n\t\t\t\tthis[i] = obj[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Read the contents of a file.\n\t * \n\t * @param {String} path The path (relative) to the file.\n\t * @param {String} [charset=\"ISO8859-1\"] The expected charset of the file\n\t * @param {Boolean} async If true, the file will be read asynchronously. For node.js this does nothing, all\n\t *        files are read synchronously.\n\t * @returns {String} The file data if async is false, otherwise a promise object. If running node.js, the data is\n\t *          always returned.\n\t */\n\t\n\t_readFile : function (path, charset, async) {\n\t\tcharset = charset || \"utf8\";\n\t\t\n\t\tif (typeof XMLHttpRequest !== 'undefined') {\n\t\t\tvar promise;\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\treq.open(\"GET\", path, async);\n\t\t\t\n\t\t\tif (async) {\n\t\t\t\tpromise = new Promise(function(resolve, reject) {\n\t\t\t\t\treq.onload = function() {\n\t\t\t\t\t\tif (req.status === 200) {\n\t\t\t\t\t\t\tresolve(req.responseText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treject(req.statusText);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\treq.onerror = function() {\n\t\t\t\t\t\treject(req.statusText);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\tif (req.overrideMimeType)\n\t\t\t\treq.overrideMimeType(\"text/plain; charset=\" + charset);\n\t\t\n\t\t\treq.send(null);\n\t\t\t\n\t\t\treturn async ? promise : req.responseText;\n\t\t}\n\t\telse if (typeof require !== 'undefined') {\n\t\t\t// Node.js\n\t\t\tvar fs = require(\"fs\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif (fs.existsSync(path)) {\n\t\t\t\t\tvar stats = fs.statSync(path);\n\t\t\t\t\t\n\t\t\t\t\tvar fileDescriptor = fs.openSync(path, 'r');\n\t\t\t\t\t\n\t\t\t\t\tvar buffer = new Buffer(stats.size);\n\t\t\t\t\t\n\t\t\t\t\tfs.readSync(fileDescriptor, buffer, 0, buffer.length, null);\n\t\t\t\t\t\n\t\t\t\t\treturn buffer.toString(charset, 0, buffer.length);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"Path \" + path + \" does not exist.\");\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Parse the rules out from a .aff file.\n\t *\n\t * @param {String} data The contents of the affix file.\n\t * @returns object The rules from the file.\n\t */\n\t\n\t_parseAFF : function (data) {\n\t\tvar rules = {};\n\t\t\n\t\tvar line, subline, numEntries, lineParts;\n\t\tvar i, j, _len, _jlen;\n\t\t\n\t\t// Remove comment lines\n\t\tdata = this._removeAffixComments(data);\n\t\t\n\t\tvar lines = data.split(\"\\n\");\n\t\t\n\t\tfor (i = 0, _len = lines.length; i < _len; i++) {\n\t\t\tline = lines[i];\n\t\t\t\n\t\t\tvar definitionParts = line.split(/\\s+/);\n\t\t\t\n\t\t\tvar ruleType = definitionParts[0];\n\t\t\t\n\t\t\tif (ruleType == \"PFX\" || ruleType == \"SFX\") {\n\t\t\t\tvar ruleCode = definitionParts[1];\n\t\t\t\tvar combineable = definitionParts[2];\n\t\t\t\tnumEntries = parseInt(definitionParts[3], 10);\n\t\t\t\t\n\t\t\t\tvar entries = [];\n\t\t\t\t\n\t\t\t\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tsubline = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tlineParts = subline.split(/\\s+/);\n\t\t\t\t\tvar charactersToRemove = lineParts[2];\n\t\t\t\t\t\n\t\t\t\t\tvar additionParts = lineParts[3].split(\"/\");\n\t\t\t\t\t\n\t\t\t\t\tvar charactersToAdd = additionParts[0];\n\t\t\t\t\tif (charactersToAdd === \"0\") charactersToAdd = \"\";\n\t\t\t\t\t\n\t\t\t\t\tvar continuationClasses = this.parseRuleCodes(additionParts[1]);\n\t\t\t\t\t\n\t\t\t\t\tvar regexToMatch = lineParts[4];\n\t\t\t\t\t\n\t\t\t\t\tvar entry = {};\n\t\t\t\t\tentry.add = charactersToAdd;\n\t\t\t\t\t\n\t\t\t\t\tif (continuationClasses.length > 0) entry.continuationClasses = continuationClasses;\n\t\t\t\t\t\n\t\t\t\t\tif (regexToMatch !== \".\") {\n\t\t\t\t\t\tif (ruleType === \"SFX\") {\n\t\t\t\t\t\t\tentry.match = new RegExp(regexToMatch + \"$\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.match = new RegExp(\"^\" + regexToMatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (charactersToRemove != \"0\") {\n\t\t\t\t\t\tif (ruleType === \"SFX\") {\n\t\t\t\t\t\t\tentry.remove = new RegExp(charactersToRemove  + \"$\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.remove = charactersToRemove;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tentries.push(entry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trules[ruleCode] = { \"type\" : ruleType, \"combineable\" : (combineable == \"Y\"), \"entries\" : entries };\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === \"COMPOUNDRULE\") {\n\t\t\t\tnumEntries = parseInt(definitionParts[1], 10);\n\t\t\t\t\n\t\t\t\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tline = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tlineParts = line.split(/\\s+/);\n\t\t\t\t\tthis.compoundRules.push(lineParts[1]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === \"REP\") {\n\t\t\t\tlineParts = line.split(/\\s+/);\n\t\t\t\t\n\t\t\t\tif (lineParts.length === 3) {\n\t\t\t\t\tthis.replacementTable.push([ lineParts[1], lineParts[2] ]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// ONLYINCOMPOUND\n\t\t\t\t// COMPOUNDMIN\n\t\t\t\t// FLAG\n\t\t\t\t// KEEPCASE\n\t\t\t\t// NEEDAFFIX\n\t\t\t\t\n\t\t\t\tthis.flags[ruleType] = definitionParts[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn rules;\n\t},\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from an affix file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeAffixComments : function (data) {\n\t\t// Remove comments\n\t\t// This used to remove any string starting with '#' up to the end of the line,\n\t\t// but some COMPOUNDRULE definitions include '#' as part of the rule.\n\t\t// I haven't seen any affix files that use comments on the same line as real data,\n\t\t// so I don't think this will break anything.\n\t\tdata = data.replace(/^\\s*#.*$/mg, \"\");\n\t\t\n\t\t// Trim each line\n\t\tdata = data.replace(/^\\s\\s*/m, '').replace(/\\s\\s*$/m, '');\n\t\t\n\t\t// Remove blank lines.\n\t\tdata = data.replace(/\\n{2,}/g, \"\\n\");\n\t\t\n\t\t// Trim the entire string\n\t\tdata = data.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t\t\n\t\treturn data;\n\t},\n\t\n\t/**\n\t * Parses the words out from the .dic file.\n\t *\n\t * @param {String} data The data from the dictionary file.\n\t * @returns object The lookup table containing all of the words and\n\t *                 word forms from the dictionary.\n\t */\n\t\n\t_parseDIC : function (data) {\n\t\tdata = this._removeDicComments(data);\n\t\t\n\t\tvar lines = data.split(\"\\n\");\n\t\tvar dictionaryTable = {};\n\t\t\n\t\tfunction addWord(word, rules) {\n\t\t\t// Some dictionaries will list the same word multiple times with different rule sets.\n\t\t\tif (!dictionaryTable.hasOwnProperty(word)) {\n\t\t\t\tdictionaryTable[word] = null;\n\t\t\t}\n\t\t\t\n\t\t\tif (rules.length > 0) {\n\t\t\t\tif (dictionaryTable[word] === null) {\n\t\t\t\t\tdictionaryTable[word] = [];\n\t\t\t\t}\n\n\t\t\t\tdictionaryTable[word].push(rules);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// The first line is the number of words in the dictionary.\n\t\tfor (var i = 1, _len = lines.length; i < _len; i++) {\n\t\t\tvar line = lines[i];\n\t\t\t\n\t\t\tvar parts = line.split(\"/\", 2);\n\t\t\t\n\t\t\tvar word = parts[0];\n\n\t\t\t// Now for each affix rule, generate that form of the word.\n\t\t\tif (parts.length > 1) {\n\t\t\t\tvar ruleCodesArray = this.parseRuleCodes(parts[1]);\n\t\t\t\t\n\t\t\t\t// Save the ruleCodes for compound word situations.\n\t\t\t\tif (!(\"NEEDAFFIX\" in this.flags) || ruleCodesArray.indexOf(this.flags.NEEDAFFIX) == -1) {\n\t\t\t\t\taddWord(word, ruleCodesArray);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var j = 0, _jlen = ruleCodesArray.length; j < _jlen; j++) {\n\t\t\t\t\tvar code = ruleCodesArray[j];\n\t\t\t\t\t\n\t\t\t\t\tvar rule = this.rules[code];\n\t\t\t\t\t\n\t\t\t\t\tif (rule) {\n\t\t\t\t\t\tvar newWords = this._applyRule(word, rule);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var ii = 0, _iilen = newWords.length; ii < _iilen; ii++) {\n\t\t\t\t\t\t\tvar newWord = newWords[ii];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\taddWord(newWord, []);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (rule.combineable) {\n\t\t\t\t\t\t\t\tfor (var k = j + 1; k < _jlen; k++) {\n\t\t\t\t\t\t\t\t\tvar combineCode = ruleCodesArray[k];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar combineRule = this.rules[combineCode];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (combineRule) {\n\t\t\t\t\t\t\t\t\t\tif (combineRule.combineable && (rule.type != combineRule.type)) {\n\t\t\t\t\t\t\t\t\t\t\tvar otherNewWords = this._applyRule(newWord, combineRule);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tfor (var iii = 0, _iiilen = otherNewWords.length; iii < _iiilen; iii++) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar otherNewWord = otherNewWords[iii];\n\t\t\t\t\t\t\t\t\t\t\t\taddWord(otherNewWord, []);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (code in this.compoundRuleCodes) {\n\t\t\t\t\t\tthis.compoundRuleCodes[code].push(word);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taddWord(word.trim(), []);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dictionaryTable;\n\t},\n\t\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from a .dic file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeDicComments : function (data) {\n\t\t// I can't find any official documentation on it, but at least the de_DE\n\t\t// dictionary uses tab-indented lines as comments.\n\t\t\n\t\t// Remove comments\n\t\tdata = data.replace(/^\\t.*$/mg, \"\");\n\t\t\n\t\treturn data;\n\t},\n\t\n\tparseRuleCodes : function (textCodes) {\n\t\tif (!textCodes) {\n\t\t\treturn [];\n\t\t}\n\t\telse if (!(\"FLAG\" in this.flags)) {\n\t\t\treturn textCodes.split(\"\");\n\t\t}\n\t\telse if (this.flags.FLAG === \"long\") {\n\t\t\tvar flags = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = textCodes.length; i < _len; i += 2) {\n\t\t\t\tflags.push(textCodes.substr(i, 2));\n\t\t\t}\n\t\t\t\n\t\t\treturn flags;\n\t\t}\n\t\telse if (this.flags.FLAG === \"num\") {\n\t\t\treturn textCodes.split(\",\");\n\t\t}\n\t},\n\t\n\t/**\n\t * Applies an affix rule to a word.\n\t *\n\t * @param {String} word The base word.\n\t * @param {Object} rule The affix rule.\n\t * @returns {String[]} The new words generated by the rule.\n\t */\n\t\n\t_applyRule : function (word, rule) {\n\t\tvar entries = rule.entries;\n\t\tvar newWords = [];\n\t\t\n\t\tfor (var i = 0, _len = entries.length; i < _len; i++) {\n\t\t\tvar entry = entries[i];\n\t\t\t\n\t\t\tif (!entry.match || word.match(entry.match)) {\n\t\t\t\tvar newWord = word;\n\t\t\t\t\n\t\t\t\tif (entry.remove) {\n\t\t\t\t\tnewWord = newWord.replace(entry.remove, \"\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rule.type === \"SFX\") {\n\t\t\t\t\tnewWord = newWord + entry.add;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewWord = entry.add + newWord;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnewWords.push(newWord);\n\t\t\t\t\n\t\t\t\tif (\"continuationClasses\" in entry) {\n\t\t\t\t\tfor (var j = 0, _jlen = entry.continuationClasses.length; j < _jlen; j++) {\n\t\t\t\t\t\tvar continuationRule = this.rules[entry.continuationClasses[j]];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (continuationRule) {\n\t\t\t\t\t\t\tnewWords = newWords.concat(this._applyRule(newWord, continuationRule));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// This shouldn't happen, but it does, at least in the de_DE dictionary.\n\t\t\t\t\t\t\t// I think the author mistakenly supplied lower-case rule codes instead \n\t\t\t\t\t\t\t// of upper-case.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn newWords;\n\t},\n\t\n\t/**\n\t * Checks whether a word or a capitalization variant exists in the current dictionary.\n\t * The word is trimmed and several variations of capitalizations are checked.\n\t * If you want to check a word without any changes made to it, call checkExact()\n\t *\n\t * @see http://blog.stevenlevithan.com/archives/faster-trim-javascript re:trimming function\n\t *\n\t * @param {String} aWord The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheck : function (aWord) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\t\t\n\t\t// Remove leading and trailing whitespace\n\t\tvar trimmedWord = aWord.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t\t\n\t\tif (this.checkExact(trimmedWord)) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// The exact word is not in the dictionary.\n\t\tif (trimmedWord.toUpperCase() === trimmedWord) {\n\t\t\t// The word was supplied in all uppercase.\n\t\t\t// Check for a capitalized form of the word.\n\t\t\tvar capitalizedWord = trimmedWord[0] + trimmedWord.substring(1).toLowerCase();\n\t\t\t\n\t\t\tif (this.hasFlag(capitalizedWord, \"KEEPCASE\")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.checkExact(capitalizedWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar lowercaseWord = trimmedWord.toLowerCase();\n\t\t\n\t\tif (lowercaseWord !== trimmedWord) {\n\t\t\tif (this.hasFlag(lowercaseWord, \"KEEPCASE\")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for a lowercase form\n\t\t\tif (this.checkExact(lowercaseWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Checks whether a word exists in the current dictionary.\n\t *\n\t * @param {String} word The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheckExact : function (word) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tvar ruleCodes = this.dictionaryTable[word];\n\t\t\n\t\tvar i, _len;\n\t\t\n\t\tif (typeof ruleCodes === 'undefined') {\n\t\t\t// Check if this might be a compound word.\n\t\t\tif (\"COMPOUNDMIN\" in this.flags && word.length >= this.flags.COMPOUNDMIN) {\n\t\t\t\tfor (i = 0, _len = this.compoundRules.length; i < _len; i++) {\n\t\t\t\t\tif (word.match(this.compoundRules[i])) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (ruleCodes === null) {\n\t\t\t// a null (but not undefined) value for an entry in the dictionary table\n\t\t\t// means that the word is in the dictionary but has no flags.\n\t\t\treturn true;\n\t\t}\n\t\telse if (typeof ruleCodes === 'object') { // this.dictionary['hasOwnProperty'] will be a function.\n\t\t\tfor (i = 0, _len = ruleCodes.length; i < _len; i++) {\n\t\t\t\tif (!this.hasFlag(word, \"ONLYINCOMPOUND\", ruleCodes[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Looks up whether a given word is flagged with a given flag.\n\t *\n\t * @param {String} word The word in question.\n\t * @param {String} flag The flag in question.\n\t * @return {Boolean}\n\t */\n\t \n\thasFlag : function (word, flag, wordFlags) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tif (flag in this.flags) {\n\t\t\tif (typeof wordFlags === 'undefined') {\n\t\t\t\twordFlags = Array.prototype.concat.apply([], this.dictionaryTable[word]);\n\t\t\t}\n\t\t\t\n\t\t\tif (wordFlags && wordFlags.indexOf(this.flags[flag]) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Returns a list of suggestions for a misspelled word.\n\t *\n\t * @see http://www.norvig.com/spell-correct.html for the basis of this suggestor.\n\t * This suggestor is primitive, but it works.\n\t *\n\t * @param {String} word The misspelling.\n\t * @param {Number} [limit=5] The maximum number of suggestions to return.\n\t * @returns {String[]} The array of suggestions.\n\t */\n\t\n\talphabet : \"\",\n\t\n\tsuggest : function (word, limit) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tlimit = limit || 5;\n\n\t\tif (this.memoized.hasOwnProperty(word)) {\n\t\t\tvar memoizedLimit = this.memoized[word]['limit'];\n\n\t\t\t// Only return the cached list if it's big enough or if there weren't enough suggestions\n\t\t\t// to fill a smaller limit.\n\t\t\tif (limit <= memoizedLimit || this.memoized[word]['suggestions'].length < memoizedLimit) {\n\t\t\t\treturn this.memoized[word]['suggestions'].slice(0, limit);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.check(word)) return [];\n\t\t\n\t\t// Check the replacement table.\n\t\tfor (var i = 0, _len = this.replacementTable.length; i < _len; i++) {\n\t\t\tvar replacementEntry = this.replacementTable[i];\n\t\t\t\n\t\t\tif (word.indexOf(replacementEntry[0]) !== -1) {\n\t\t\t\tvar correctedWord = word.replace(replacementEntry[0], replacementEntry[1]);\n\t\t\t\t\n\t\t\t\tif (this.check(correctedWord)) {\n\t\t\t\t\treturn [ correctedWord ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar self = this;\n\t\tself.alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t\t\n\t\t/*\n\t\tif (!self.alphabet) {\n\t\t\t// Use the alphabet as implicitly defined by the words in the dictionary.\n\t\t\tvar alphaHash = {};\n\t\t\t\n\t\t\tfor (var i in self.dictionaryTable) {\n\t\t\t\tfor (var j = 0, _len = i.length; j < _len; j++) {\n\t\t\t\t\talphaHash[i[j]] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i in alphaHash) {\n\t\t\t\tself.alphabet += i;\n\t\t\t}\n\t\t\t\n\t\t\tvar alphaArray = self.alphabet.split(\"\");\n\t\t\talphaArray.sort();\n\t\t\tself.alphabet = alphaArray.join(\"\");\n\t\t}\n\t\t*/\n\t\t\n\t\tfunction edits1(words) {\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tvar ii, i, j, _iilen, _len, _jlen;\n\t\t\t\n\t\t\tfor (ii = 0, _iilen = words.length; ii < _iilen; ii++) {\n\t\t\t\tvar word = words[ii];\n\t\t\t\t\n\t\t\t\tfor (i = 0, _len = word.length + 1; i < _len; i++) {\n\t\t\t\t\tvar s = [ word.substring(0, i), word.substring(i) ];\n\t\t\t\t\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\trv.push(s[0] + s[1].substring(1));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Eliminate transpositions of identical letters\n\t\t\t\t\tif (s[1].length > 1 && s[1][1] !== s[1][0]) {\n\t\t\t\t\t\trv.push(s[0] + s[1][1] + s[1][0] + s[1].substring(2));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\t// Eliminate replacement of a letter by itself\n\t\t\t\t\t\t\tif (self.alphabet[j] != s[1].substring(0,1)){\n\t\t\t\t\t\t\t\trv.push(s[0] + self.alphabet[j] + s[1].substring(1));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\trv.push(s[0] + self.alphabet[j] + s[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tfunction known(words) {\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = words.length; i < _len; i++) {\n\t\t\t\tif (self.check(words[i])) {\n\t\t\t\t\trv.push(words[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tfunction correct(word) {\n\t\t\t// Get the edit-distance-1 and edit-distance-2 forms of this word.\n\t\t\tvar ed1 = edits1([word]);\n\t\t\tvar ed2 = edits1(ed1);\n\t\t\t\n\t\t\tvar corrections = known(ed1.concat(ed2));\n\t\t\t\n\t\t\tvar i, _len;\n\t\t\t\n\t\t\t// Sort the edits based on how many different ways they were created.\n\t\t\tvar weighted_corrections = {};\n\t\t\t\n\t\t\tfor (i = 0, _len = corrections.length; i < _len; i++) {\n\t\t\t\tif (!(corrections[i] in weighted_corrections)) {\n\t\t\t\t\tweighted_corrections[corrections[i]] = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tweighted_corrections[corrections[i]] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sorted_corrections = [];\n\t\t\t\n\t\t\tfor (i in weighted_corrections) {\n\t\t\t\tif (weighted_corrections.hasOwnProperty(i)) {\n\t\t\t\t\tsorted_corrections.push([ i, weighted_corrections[i] ]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction sorter(a, b) {\n\t\t\t\tif (a[1] < b[1]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\tsorted_corrections.sort(sorter).reverse();\n\t\t\t\n\t\t\tvar rv = [];\n\n\t\t\tvar capitalization_scheme = \"lowercase\";\n\t\t\t\n\t\t\tif (word.toUpperCase() === word) {\n\t\t\t\tcapitalization_scheme = \"uppercase\";\n\t\t\t}\n\t\t\telse if (word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase() === word) {\n\t\t\t\tcapitalization_scheme = \"capitalized\";\n\t\t\t}\n\t\t\t\n\t\t\tfor (i = 0, _len = Math.min(limit, sorted_corrections.length); i < _len; i++) {\n\t\t\t\tif (\"uppercase\" === capitalization_scheme) {\n\t\t\t\t\tsorted_corrections[i][0] = sorted_corrections[i][0].toUpperCase();\n\t\t\t\t}\n\t\t\t\telse if (\"capitalized\" === capitalization_scheme) {\n\t\t\t\t\tsorted_corrections[i][0] = sorted_corrections[i][0].substr(0, 1).toUpperCase() + sorted_corrections[i][0].substr(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!self.hasFlag(sorted_corrections[i][0], \"NOSUGGEST\")) {\n\t\t\t\t\trv.push(sorted_corrections[i][0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tthis.memoized[word] = {\n\t\t\t'suggestions': correct(word),\n\t\t\t'limit': limit\n\t\t};\n\n\t\treturn this.memoized[word]['suggestions'];\n\t}\n};\n})();\n\n// Support for use as a node.js module.\nif (typeof module !== 'undefined') {\n\tmodule.exports = Typo;\n}","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var listRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]\\s|[*+-]\\s|(\\d+)([.)]))(\\s*)/,\n      emptyListRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]|[*+-]|(\\d+)[.)])(\\s*)$/,\n      unorderedListRE = /[*+-]\\s/;\n\n  CodeMirror.commands.newlineAndIndentContinueMarkdownList = function(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(), replacements = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var pos = ranges[i].head;\n      var eolState = cm.getStateAfter(pos.line);\n      var inList = eolState.list !== false;\n      var inQuote = eolState.quote !== 0;\n\n      var line = cm.getLine(pos.line), match = listRE.exec(line);\n      var cursorBeforeBullet = /^\\s*$/.test(line.slice(0, pos.ch));\n      if (!ranges[i].empty() || (!inList && !inQuote) || !match || cursorBeforeBullet) {\n        cm.execCommand(\"newlineAndIndent\");\n        return;\n      }\n      if (emptyListRE.test(line)) {\n        if (!/>\\s*$/.test(line)) cm.replaceRange(\"\", {\n          line: pos.line, ch: 0\n        }, {\n          line: pos.line, ch: pos.ch + 1\n        });\n        replacements[i] = \"\\n\";\n      } else {\n        var indent = match[1], after = match[5];\n        var numbered = !(unorderedListRE.test(match[2]) || match[2].indexOf(\">\") >= 0);\n        var bullet = numbered ? (parseInt(match[3], 10) + 1) + match[4] : match[2].replace(\"x\", \" \");\n        replacements[i] = \"\\n\" + indent + bullet + after;\n\n        if (numbered) incrementRemainingMarkdownListNumbers(cm, pos);\n      }\n    }\n\n    cm.replaceSelections(replacements);\n  };\n\n  // Auto-updating Markdown list numbers when a new item is added to the\n  // middle of a list\n  function incrementRemainingMarkdownListNumbers(cm, pos) {\n    var startLine = pos.line, lookAhead = 0, skipCount = 0;\n    var startItem = listRE.exec(cm.getLine(startLine)), startIndent = startItem[1];\n\n    do {\n      lookAhead += 1;\n      var nextLineNumber = startLine + lookAhead;\n      var nextLine = cm.getLine(nextLineNumber), nextItem = listRE.exec(nextLine);\n\n      if (nextItem) {\n        var nextIndent = nextItem[1];\n        var newNumber = (parseInt(startItem[3], 10) + lookAhead - skipCount);\n        var nextNumber = (parseInt(nextItem[3], 10)), itemNumber = nextNumber;\n\n        if (startIndent === nextIndent && !isNaN(nextNumber)) {\n          if (newNumber === nextNumber) itemNumber = nextNumber + 1;\n          if (newNumber > nextNumber) itemNumber = newNumber + 1;\n          cm.replaceRange(\n            nextLine.replace(listRE, nextIndent + itemNumber + nextItem[4] + nextItem[5]),\n          {\n            line: nextLineNumber, ch: 0\n          }, {\n            line: nextLineNumber, ch: nextLine.length\n          });\n        } else {\n          if (startIndent.length > nextIndent.length) return;\n          // This doesn't run if the next line immediatley indents, as it is\n          // not clear of the users intention (new indented item or same level)\n          if ((startIndent.length < nextIndent.length) && (lookAhead === 1)) return;\n          skipCount += 1;\n        }\n      }\n    } while (nextItem);\n  }\n});\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])[\\s\\S]*?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|$', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|$')\n    .getRegex()\n});\n\ninline.gfm.url = edit(inline.gfm.url)\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n}\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n}\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch] });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch] });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n}\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.modeInfo = [\n    {name: \"APL\", mime: \"text/apl\", mode: \"apl\", ext: [\"dyalog\", \"apl\"]},\n    {name: \"PGP\", mimes: [\"application/pgp\", \"application/pgp-encrypted\", \"application/pgp-keys\", \"application/pgp-signature\"], mode: \"asciiarmor\", ext: [\"asc\", \"pgp\", \"sig\"]},\n    {name: \"ASN.1\", mime: \"text/x-ttcn-asn\", mode: \"asn.1\", ext: [\"asn\", \"asn1\"]},\n    {name: \"Asterisk\", mime: \"text/x-asterisk\", mode: \"asterisk\", file: /^extensions\\.conf$/i},\n    {name: \"Brainfuck\", mime: \"text/x-brainfuck\", mode: \"brainfuck\", ext: [\"b\", \"bf\"]},\n    {name: \"C\", mime: \"text/x-csrc\", mode: \"clike\", ext: [\"c\", \"h\", \"ino\"]},\n    {name: \"C++\", mime: \"text/x-c++src\", mode: \"clike\", ext: [\"cpp\", \"c++\", \"cc\", \"cxx\", \"hpp\", \"h++\", \"hh\", \"hxx\"], alias: [\"cpp\"]},\n    {name: \"Cobol\", mime: \"text/x-cobol\", mode: \"cobol\", ext: [\"cob\", \"cpy\"]},\n    {name: \"C#\", mime: \"text/x-csharp\", mode: \"clike\", ext: [\"cs\"], alias: [\"csharp\"]},\n    {name: \"Clojure\", mime: \"text/x-clojure\", mode: \"clojure\", ext: [\"clj\", \"cljc\", \"cljx\"]},\n    {name: \"ClojureScript\", mime: \"text/x-clojurescript\", mode: \"clojure\", ext: [\"cljs\"]},\n    {name: \"Closure Stylesheets (GSS)\", mime: \"text/x-gss\", mode: \"css\", ext: [\"gss\"]},\n    {name: \"CMake\", mime: \"text/x-cmake\", mode: \"cmake\", ext: [\"cmake\", \"cmake.in\"], file: /^CMakeLists.txt$/},\n    {name: \"CoffeeScript\", mimes: [\"application/vnd.coffeescript\", \"text/coffeescript\", \"text/x-coffeescript\"], mode: \"coffeescript\", ext: [\"coffee\"], alias: [\"coffee\", \"coffee-script\"]},\n    {name: \"Common Lisp\", mime: \"text/x-common-lisp\", mode: \"commonlisp\", ext: [\"cl\", \"lisp\", \"el\"], alias: [\"lisp\"]},\n    {name: \"Cypher\", mime: \"application/x-cypher-query\", mode: \"cypher\", ext: [\"cyp\", \"cypher\"]},\n    {name: \"Cython\", mime: \"text/x-cython\", mode: \"python\", ext: [\"pyx\", \"pxd\", \"pxi\"]},\n    {name: \"Crystal\", mime: \"text/x-crystal\", mode: \"crystal\", ext: [\"cr\"]},\n    {name: \"CSS\", mime: \"text/css\", mode: \"css\", ext: [\"css\"]},\n    {name: \"CQL\", mime: \"text/x-cassandra\", mode: \"sql\", ext: [\"cql\"]},\n    {name: \"D\", mime: \"text/x-d\", mode: \"d\", ext: [\"d\"]},\n    {name: \"Dart\", mimes: [\"application/dart\", \"text/x-dart\"], mode: \"dart\", ext: [\"dart\"]},\n    {name: \"diff\", mime: \"text/x-diff\", mode: \"diff\", ext: [\"diff\", \"patch\"]},\n    {name: \"Django\", mime: \"text/x-django\", mode: \"django\"},\n    {name: \"Dockerfile\", mime: \"text/x-dockerfile\", mode: \"dockerfile\", file: /^Dockerfile$/},\n    {name: \"DTD\", mime: \"application/xml-dtd\", mode: \"dtd\", ext: [\"dtd\"]},\n    {name: \"Dylan\", mime: \"text/x-dylan\", mode: \"dylan\", ext: [\"dylan\", \"dyl\", \"intr\"]},\n    {name: \"EBNF\", mime: \"text/x-ebnf\", mode: \"ebnf\"},\n    {name: \"ECL\", mime: \"text/x-ecl\", mode: \"ecl\", ext: [\"ecl\"]},\n    {name: \"edn\", mime: \"application/edn\", mode: \"clojure\", ext: [\"edn\"]},\n    {name: \"Eiffel\", mime: \"text/x-eiffel\", mode: \"eiffel\", ext: [\"e\"]},\n    {name: \"Elm\", mime: \"text/x-elm\", mode: \"elm\", ext: [\"elm\"]},\n    {name: \"Embedded Javascript\", mime: \"application/x-ejs\", mode: \"htmlembedded\", ext: [\"ejs\"]},\n    {name: \"Embedded Ruby\", mime: \"application/x-erb\", mode: \"htmlembedded\", ext: [\"erb\"]},\n    {name: \"Erlang\", mime: \"text/x-erlang\", mode: \"erlang\", ext: [\"erl\"]},\n    {name: \"Esper\", mime: \"text/x-esper\", mode: \"sql\"},\n    {name: \"Factor\", mime: \"text/x-factor\", mode: \"factor\", ext: [\"factor\"]},\n    {name: \"FCL\", mime: \"text/x-fcl\", mode: \"fcl\"},\n    {name: \"Forth\", mime: \"text/x-forth\", mode: \"forth\", ext: [\"forth\", \"fth\", \"4th\"]},\n    {name: \"Fortran\", mime: \"text/x-fortran\", mode: \"fortran\", ext: [\"f\", \"for\", \"f77\", \"f90\"]},\n    {name: \"F#\", mime: \"text/x-fsharp\", mode: \"mllike\", ext: [\"fs\"], alias: [\"fsharp\"]},\n    {name: \"Gas\", mime: \"text/x-gas\", mode: \"gas\", ext: [\"s\"]},\n    {name: \"Gherkin\", mime: \"text/x-feature\", mode: \"gherkin\", ext: [\"feature\"]},\n    {name: \"GitHub Flavored Markdown\", mime: \"text/x-gfm\", mode: \"gfm\", file: /^(readme|contributing|history).md$/i},\n    {name: \"Go\", mime: \"text/x-go\", mode: \"go\", ext: [\"go\"]},\n    {name: \"Groovy\", mime: \"text/x-groovy\", mode: \"groovy\", ext: [\"groovy\", \"gradle\"], file: /^Jenkinsfile$/},\n    {name: \"HAML\", mime: \"text/x-haml\", mode: \"haml\", ext: [\"haml\"]},\n    {name: \"Haskell\", mime: \"text/x-haskell\", mode: \"haskell\", ext: [\"hs\"]},\n    {name: \"Haskell (Literate)\", mime: \"text/x-literate-haskell\", mode: \"haskell-literate\", ext: [\"lhs\"]},\n    {name: \"Haxe\", mime: \"text/x-haxe\", mode: \"haxe\", ext: [\"hx\"]},\n    {name: \"HXML\", mime: \"text/x-hxml\", mode: \"haxe\", ext: [\"hxml\"]},\n    {name: \"ASP.NET\", mime: \"application/x-aspx\", mode: \"htmlembedded\", ext: [\"aspx\"], alias: [\"asp\", \"aspx\"]},\n    {name: \"HTML\", mime: \"text/html\", mode: \"htmlmixed\", ext: [\"html\", \"htm\", \"handlebars\", \"hbs\"], alias: [\"xhtml\"]},\n    {name: \"HTTP\", mime: \"message/http\", mode: \"http\"},\n    {name: \"IDL\", mime: \"text/x-idl\", mode: \"idl\", ext: [\"pro\"]},\n    {name: \"Pug\", mime: \"text/x-pug\", mode: \"pug\", ext: [\"jade\", \"pug\"], alias: [\"jade\"]},\n    {name: \"Java\", mime: \"text/x-java\", mode: \"clike\", ext: [\"java\"]},\n    {name: \"Java Server Pages\", mime: \"application/x-jsp\", mode: \"htmlembedded\", ext: [\"jsp\"], alias: [\"jsp\"]},\n    {name: \"JavaScript\", mimes: [\"text/javascript\", \"text/ecmascript\", \"application/javascript\", \"application/x-javascript\", \"application/ecmascript\"],\n     mode: \"javascript\", ext: [\"js\"], alias: [\"ecmascript\", \"js\", \"node\"]},\n    {name: \"JSON\", mimes: [\"application/json\", \"application/x-json\"], mode: \"javascript\", ext: [\"json\", \"map\"], alias: [\"json5\"]},\n    {name: \"JSON-LD\", mime: \"application/ld+json\", mode: \"javascript\", ext: [\"jsonld\"], alias: [\"jsonld\"]},\n    {name: \"JSX\", mime: \"text/jsx\", mode: \"jsx\", ext: [\"jsx\"]},\n    {name: \"Jinja2\", mime: \"null\", mode: \"jinja2\", ext: [\"j2\", \"jinja\", \"jinja2\"]},\n    {name: \"Julia\", mime: \"text/x-julia\", mode: \"julia\", ext: [\"jl\"]},\n    {name: \"Kotlin\", mime: \"text/x-kotlin\", mode: \"clike\", ext: [\"kt\"]},\n    {name: \"LESS\", mime: \"text/x-less\", mode: \"css\", ext: [\"less\"]},\n    {name: \"LiveScript\", mime: \"text/x-livescript\", mode: \"livescript\", ext: [\"ls\"], alias: [\"ls\"]},\n    {name: \"Lua\", mime: \"text/x-lua\", mode: \"lua\", ext: [\"lua\"]},\n    {name: \"Markdown\", mime: \"text/x-markdown\", mode: \"markdown\", ext: [\"markdown\", \"md\", \"mkd\"]},\n    {name: \"mIRC\", mime: \"text/mirc\", mode: \"mirc\"},\n    {name: \"MariaDB SQL\", mime: \"text/x-mariadb\", mode: \"sql\"},\n    {name: \"Mathematica\", mime: \"text/x-mathematica\", mode: \"mathematica\", ext: [\"m\", \"nb\"]},\n    {name: \"Modelica\", mime: \"text/x-modelica\", mode: \"modelica\", ext: [\"mo\"]},\n    {name: \"MUMPS\", mime: \"text/x-mumps\", mode: \"mumps\", ext: [\"mps\"]},\n    {name: \"MS SQL\", mime: \"text/x-mssql\", mode: \"sql\"},\n    {name: \"mbox\", mime: \"application/mbox\", mode: \"mbox\", ext: [\"mbox\"]},\n    {name: \"MySQL\", mime: \"text/x-mysql\", mode: \"sql\"},\n    {name: \"Nginx\", mime: \"text/x-nginx-conf\", mode: \"nginx\", file: /nginx.*\\.conf$/i},\n    {name: \"NSIS\", mime: \"text/x-nsis\", mode: \"nsis\", ext: [\"nsh\", \"nsi\"]},\n    {name: \"NTriples\", mimes: [\"application/n-triples\", \"application/n-quads\", \"text/n-triples\"],\n     mode: \"ntriples\", ext: [\"nt\", \"nq\"]},\n    {name: \"Objective-C\", mime: \"text/x-objectivec\", mode: \"clike\", ext: [\"m\", \"mm\"], alias: [\"objective-c\", \"objc\"]},\n    {name: \"OCaml\", mime: \"text/x-ocaml\", mode: \"mllike\", ext: [\"ml\", \"mli\", \"mll\", \"mly\"]},\n    {name: \"Octave\", mime: \"text/x-octave\", mode: \"octave\", ext: [\"m\"]},\n    {name: \"Oz\", mime: \"text/x-oz\", mode: \"oz\", ext: [\"oz\"]},\n    {name: \"Pascal\", mime: \"text/x-pascal\", mode: \"pascal\", ext: [\"p\", \"pas\"]},\n    {name: \"PEG.js\", mime: \"null\", mode: \"pegjs\", ext: [\"jsonld\"]},\n    {name: \"Perl\", mime: \"text/x-perl\", mode: \"perl\", ext: [\"pl\", \"pm\"]},\n    {name: \"PHP\", mimes: [\"text/x-php\", \"application/x-httpd-php\", \"application/x-httpd-php-open\"], mode: \"php\", ext: [\"php\", \"php3\", \"php4\", \"php5\", \"php7\", \"phtml\"]},\n    {name: \"Pig\", mime: \"text/x-pig\", mode: \"pig\", ext: [\"pig\"]},\n    {name: \"Plain Text\", mime: \"text/plain\", mode: \"null\", ext: [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\"]},\n    {name: \"PLSQL\", mime: \"text/x-plsql\", mode: \"sql\", ext: [\"pls\"]},\n    {name: \"PowerShell\", mime: \"application/x-powershell\", mode: \"powershell\", ext: [\"ps1\", \"psd1\", \"psm1\"]},\n    {name: \"Properties files\", mime: \"text/x-properties\", mode: \"properties\", ext: [\"properties\", \"ini\", \"in\"], alias: [\"ini\", \"properties\"]},\n    {name: \"ProtoBuf\", mime: \"text/x-protobuf\", mode: \"protobuf\", ext: [\"proto\"]},\n    {name: \"Python\", mime: \"text/x-python\", mode: \"python\", ext: [\"BUILD\", \"bzl\", \"py\", \"pyw\"], file: /^(BUCK|BUILD)$/},\n    {name: \"Puppet\", mime: \"text/x-puppet\", mode: \"puppet\", ext: [\"pp\"]},\n    {name: \"Q\", mime: \"text/x-q\", mode: \"q\", ext: [\"q\"]},\n    {name: \"R\", mime: \"text/x-rsrc\", mode: \"r\", ext: [\"r\", \"R\"], alias: [\"rscript\"]},\n    {name: \"reStructuredText\", mime: \"text/x-rst\", mode: \"rst\", ext: [\"rst\"], alias: [\"rst\"]},\n    {name: \"RPM Changes\", mime: \"text/x-rpm-changes\", mode: \"rpm\"},\n    {name: \"RPM Spec\", mime: \"text/x-rpm-spec\", mode: \"rpm\", ext: [\"spec\"]},\n    {name: \"Ruby\", mime: \"text/x-ruby\", mode: \"ruby\", ext: [\"rb\"], alias: [\"jruby\", \"macruby\", \"rake\", \"rb\", \"rbx\"]},\n    {name: \"Rust\", mime: \"text/x-rustsrc\", mode: \"rust\", ext: [\"rs\"]},\n    {name: \"SAS\", mime: \"text/x-sas\", mode: \"sas\", ext: [\"sas\"]},\n    {name: \"Sass\", mime: \"text/x-sass\", mode: \"sass\", ext: [\"sass\"]},\n    {name: \"Scala\", mime: \"text/x-scala\", mode: \"clike\", ext: [\"scala\"]},\n    {name: \"Scheme\", mime: \"text/x-scheme\", mode: \"scheme\", ext: [\"scm\", \"ss\"]},\n    {name: \"SCSS\", mime: \"text/x-scss\", mode: \"css\", ext: [\"scss\"]},\n    {name: \"Shell\", mimes: [\"text/x-sh\", \"application/x-sh\"], mode: \"shell\", ext: [\"sh\", \"ksh\", \"bash\"], alias: [\"bash\", \"sh\", \"zsh\"], file: /^PKGBUILD$/},\n    {name: \"Sieve\", mime: \"application/sieve\", mode: \"sieve\", ext: [\"siv\", \"sieve\"]},\n    {name: \"Slim\", mimes: [\"text/x-slim\", \"application/x-slim\"], mode: \"slim\", ext: [\"slim\"]},\n    {name: \"Smalltalk\", mime: \"text/x-stsrc\", mode: \"smalltalk\", ext: [\"st\"]},\n    {name: \"Smarty\", mime: \"text/x-smarty\", mode: \"smarty\", ext: [\"tpl\"]},\n    {name: \"Solr\", mime: \"text/x-solr\", mode: \"solr\"},\n    {name: \"SML\", mime: \"text/x-sml\", mode: \"mllike\", ext: [\"sml\", \"sig\", \"fun\", \"smackspec\"]},\n    {name: \"Soy\", mime: \"text/x-soy\", mode: \"soy\", ext: [\"soy\"], alias: [\"closure template\"]},\n    {name: \"SPARQL\", mime: \"application/sparql-query\", mode: \"sparql\", ext: [\"rq\", \"sparql\"], alias: [\"sparul\"]},\n    {name: \"Spreadsheet\", mime: \"text/x-spreadsheet\", mode: \"spreadsheet\", alias: [\"excel\", \"formula\"]},\n    {name: \"SQL\", mime: \"text/x-sql\", mode: \"sql\", ext: [\"sql\"]},\n    {name: \"SQLite\", mime: \"text/x-sqlite\", mode: \"sql\"},\n    {name: \"Squirrel\", mime: \"text/x-squirrel\", mode: \"clike\", ext: [\"nut\"]},\n    {name: \"Stylus\", mime: \"text/x-styl\", mode: \"stylus\", ext: [\"styl\"]},\n    {name: \"Swift\", mime: \"text/x-swift\", mode: \"swift\", ext: [\"swift\"]},\n    {name: \"sTeX\", mime: \"text/x-stex\", mode: \"stex\"},\n    {name: \"LaTeX\", mime: \"text/x-latex\", mode: \"stex\", ext: [\"text\", \"ltx\", \"tex\"], alias: [\"tex\"]},\n    {name: \"SystemVerilog\", mime: \"text/x-systemverilog\", mode: \"verilog\", ext: [\"v\", \"sv\", \"svh\"]},\n    {name: \"Tcl\", mime: \"text/x-tcl\", mode: \"tcl\", ext: [\"tcl\"]},\n    {name: \"Textile\", mime: \"text/x-textile\", mode: \"textile\", ext: [\"textile\"]},\n    {name: \"TiddlyWiki \", mime: \"text/x-tiddlywiki\", mode: \"tiddlywiki\"},\n    {name: \"Tiki wiki\", mime: \"text/tiki\", mode: \"tiki\"},\n    {name: \"TOML\", mime: \"text/x-toml\", mode: \"toml\", ext: [\"toml\"]},\n    {name: \"Tornado\", mime: \"text/x-tornado\", mode: \"tornado\"},\n    {name: \"troff\", mime: \"text/troff\", mode: \"troff\", ext: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]},\n    {name: \"TTCN\", mime: \"text/x-ttcn\", mode: \"ttcn\", ext: [\"ttcn\", \"ttcn3\", \"ttcnpp\"]},\n    {name: \"TTCN_CFG\", mime: \"text/x-ttcn-cfg\", mode: \"ttcn-cfg\", ext: [\"cfg\"]},\n    {name: \"Turtle\", mime: \"text/turtle\", mode: \"turtle\", ext: [\"ttl\"]},\n    {name: \"TypeScript\", mime: \"application/typescript\", mode: \"javascript\", ext: [\"ts\"], alias: [\"ts\"]},\n    {name: \"TypeScript-JSX\", mime: \"text/typescript-jsx\", mode: \"jsx\", ext: [\"tsx\"], alias: [\"tsx\"]},\n    {name: \"Twig\", mime: \"text/x-twig\", mode: \"twig\"},\n    {name: \"Web IDL\", mime: \"text/x-webidl\", mode: \"webidl\", ext: [\"webidl\"]},\n    {name: \"VB.NET\", mime: \"text/x-vb\", mode: \"vb\", ext: [\"vb\"]},\n    {name: \"VBScript\", mime: \"text/vbscript\", mode: \"vbscript\", ext: [\"vbs\"]},\n    {name: \"Velocity\", mime: \"text/velocity\", mode: \"velocity\", ext: [\"vtl\"]},\n    {name: \"Verilog\", mime: \"text/x-verilog\", mode: \"verilog\", ext: [\"v\"]},\n    {name: \"VHDL\", mime: \"text/x-vhdl\", mode: \"vhdl\", ext: [\"vhd\", \"vhdl\"]},\n    {name: \"Vue.js Component\", mimes: [\"script/x-vue\", \"text/x-vue\"], mode: \"vue\", ext: [\"vue\"]},\n    {name: \"XML\", mimes: [\"application/xml\", \"text/xml\"], mode: \"xml\", ext: [\"xml\", \"xsl\", \"xsd\", \"svg\"], alias: [\"rss\", \"wsdl\", \"xsd\"]},\n    {name: \"XQuery\", mime: \"application/xquery\", mode: \"xquery\", ext: [\"xy\", \"xquery\"]},\n    {name: \"Yacas\", mime: \"text/x-yacas\", mode: \"yacas\", ext: [\"ys\"]},\n    {name: \"YAML\", mimes: [\"text/x-yaml\", \"text/yaml\"], mode: \"yaml\", ext: [\"yaml\", \"yml\"], alias: [\"yml\"]},\n    {name: \"Z80\", mime: \"text/x-z80\", mode: \"z80\", ext: [\"z80\"]},\n    {name: \"mscgen\", mime: \"text/x-mscgen\", mode: \"mscgen\", ext: [\"mscgen\", \"mscin\", \"msc\"]},\n    {name: \"xu\", mime: \"text/x-xu\", mode: \"mscgen\", ext: [\"xu\"]},\n    {name: \"msgenny\", mime: \"text/x-msgenny\", mode: \"mscgen\", ext: [\"msgenny\"]}\n  ];\n  // Ensure all modes have a mime property for backwards compatibility\n  for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n    var info = CodeMirror.modeInfo[i];\n    if (info.mimes) info.mime = info.mimes[0];\n  }\n\n  CodeMirror.findModeByMIME = function(mime) {\n    mime = mime.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.mime == mime) return info;\n      if (info.mimes) for (var j = 0; j < info.mimes.length; j++)\n        if (info.mimes[j] == mime) return info;\n    }\n    if (/\\+xml$/.test(mime)) return CodeMirror.findModeByMIME(\"application/xml\")\n    if (/\\+json$/.test(mime)) return CodeMirror.findModeByMIME(\"application/json\")\n  };\n\n  CodeMirror.findModeByExtension = function(ext) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.ext) for (var j = 0; j < info.ext.length; j++)\n        if (info.ext[j] == ext) return info;\n    }\n  };\n\n  CodeMirror.findModeByFileName = function(filename) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.file && info.file.test(filename)) return info;\n    }\n    var dot = filename.lastIndexOf(\".\");\n    var ext = dot > -1 && filename.substring(dot + 1, filename.length);\n    if (ext) return CodeMirror.findModeByExtension(ext);\n  };\n\n  CodeMirror.findModeByName = function(name) {\n    name = name.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.name.toLowerCase() == name) return info;\n      if (info.alias) for (var j = 0; j < info.alias.length; j++)\n        if (info.alias[j].toLowerCase() == name) return info;\n    }\n  };\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  if (modeCfg.emoji === undefined)\n    modeCfg.emoji = false;\n\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\n    modeCfg.fencedCodeBlockHighlighting = true;\n\n  if (modeCfg.xml === undefined)\n    modeCfg.xml = true;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\",\n    emoji: \"builtin\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ *(?:\\={1,}|-{1,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w+#-]*)[^\\n`]*$/\n  ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n  ,   punctuation = /[!\\\"#$%&\\'()*+,\\-\\.\\/:;<=>?@\\[\\\\\\]^_`{|}~—]/\n  ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    state.linkHref = false;\n    state.linkText = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      var exit = htmlModeMissing\n      if (!exit) {\n        var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n        exit = inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n          (!inner.state.context && inner.state.tokenize.isInText)\n      }\n      if (exit) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = {stream: null}\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n    var firstTokenOnLine = stream.column() === state.indentation;\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n    var prevLineIsIndentedCode = state.indentedCode;\n    var prevLineIsHr = state.prevLine.hr;\n    var prevLineIsList = state.list !== false;\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n    state.indentedCode = false;\n\n    var lineIndentation = state.indentation;\n    // compute once per line (on first token)\n    if (state.indentationDiff === null) {\n      state.indentationDiff = state.indentation;\n      if (prevLineIsList) {\n        // Reset inline styles which shouldn't propagate aross list items\n        state.em = false;\n        state.strong = false;\n        state.code = false;\n        state.strikethrough = false;\n\n        state.list = null;\n        // While this list item's marker's indentation is less than the deepest\n        //  list item's content's indentation,pop the deepest list item\n        //  indentation off the stack, and update block indentation state\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n          state.listStack.pop();\n          if (state.listStack.length) {\n            state.indentation = state.listStack[state.listStack.length - 1];\n          // less than the first list's indent -> the line is no longer a list\n          } else {\n            state.list = false;\n          }\n        }\n        if (state.list !== false) {\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n        }\n      }\n    }\n\n    // not comprehensive (currently only for setext detection purposes)\n    var allowsInlineContinuation = (\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\n        !state.prevLine.fencedCodeEnd\n    );\n\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n    var match = null;\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n         state.prevLine.header || prevLineLineIsEmpty)) {\n      stream.skipToEnd();\n      state.indentedCode = true;\n      return tokenTypes.code;\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.quote = 0;\n      state.header = match[1].length;\n      state.thisLine.header = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n\n      state.indentation = lineIndentation + stream.current().length;\n      state.list = true;\n      state.quote = 0;\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n      state.quote = 0;\n      state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n      // try switching mode\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2]);\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    // SETEXT has lowest block-scope precedence after HR, so check it after\n    //  the others (code, blockquote, list...)\n    } else if (\n      // if setext set, indicates line after ---/===\n      state.setext || (\n        // line before ---/===\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n      )\n    ) {\n      if ( !state.setext ) {\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\n        state.setext = state.header;\n      } else {\n        state.header = state.setext;\n        // has no effect on type so we can reset it now\n        state.setext = 0;\n        stream.skipToEnd();\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      }\n      state.thisLine.header = true;\n      state.f = state.inline;\n      return getType(state);\n    } else if (isHr) {\n      stream.skipToEnd();\n      state.hr = true;\n      state.thisLine.hr = true;\n      return tokenTypes.hr;\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\n    var hasExitedList = state.indentation < currListInd;\n    var maxFencedEndInd = currListInd + 3;\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType;\n      if (!hasExitedList) returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedEndRE = null;\n      state.code = 0\n      state.thisLine.fencedCodeEnd = true;\n      if (hasExitedList) return switchBlock(stream, state, state.block);\n      return returnType;\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0 && (!state.quote || count == 1)) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && !state.image) {\n      if (state.linkText && stream.match(/^.*?\\]/)) return getType(state)\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|\\?|!\\[CDATA\\[|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*(?:>|$))/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match(/^~~/, true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (modeCfg.emoji && ch === \":\" && stream.match(/^(?:[a-z_\\d+][a-z_\\d+-]*|\\-[a-z_\\d+][a-z_\\d+-]*):/)) {\n      state.emoji = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n      var retType = getType(state);\n      state.emoji = false;\n      return retType;\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/^ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(/^\\]:/, true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: {stream: null},\n        thisLine: {stream: null},\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        setext: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        emoji: false,\n        fencedEndRE: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkText: s.linkText,\n        linkTitle: s.linkTitle,\n        linkHref: s.linkHref,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        emoji: s.emoji,\n        header: s.header,\n        setext: s.setext,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedEndRE: s.fencedEndRE\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine.stream) {\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true)) {\n          blankLine(state);\n          return null;\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = {stream: stream}\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        if (!state.localState) {\n          state.f = state.block;\n          if (state.f != htmlBlock) {\n            var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n            state.indentation = indentation;\n            state.indentationDiff = null;\n            if (indentation > 0) return null;\n          }\n        }\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    indent: function(state, textAfter, line) {\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n      return CodeMirror.Pass\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n"],"sourceRoot":""}